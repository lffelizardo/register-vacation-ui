{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/angular.material.module.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/edit-employee/edit-employee.component.ts","webpack:///src/app/edit-employee/edit-employee.component.html","webpack:///src/app/employee/employee.component.ts","webpack:///src/app/employee/employee.component.html","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/helpers/auth.guard.ts","webpack:///src/app/helpers/jwt.interceptor.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/models/employee.ts","webpack:///src/app/models/team.ts","webpack:///src/app/models/vacation.ts","webpack:///src/app/new-vacation/new-vacation.component.ts","webpack:///src/app/new-vacation/new-vacation.component.html","webpack:///src/app/register/register.component.ts","webpack:///src/app/register/register.component.html","webpack:///src/app/services/authentication.service.ts","webpack:///src/app/services/employee.service.ts","webpack:///src/app/services/team.service.ts","webpack:///src/app/services/user.service.ts","webpack:///src/app/services/vacation.service.ts","webpack:///src/app/team-dialog/team-dialog.component.ts","webpack:///src/app/team-dialog/team-dialog.component.html","webpack:///src/app/team/team.component.ts","webpack:///src/app/team/team.component.html","webpack:///src/app/vacation/vacation.component.ts","webpack:///src/app/vacation/vacation.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AngularMaterialModule","imports","providers","routes","path","component","canActivate","redirectTo","AppRoutingModule","forRoot","useHash","AppComponent","title","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","useValue","declarations","bootstrap","EditEmployeeComponent","formBuilder","employeeService","dialogRef","data","EmployeeComponent","dialog","displayedColumns","dataSource","getAll","subscribe","error","console","open","width","HeaderComponent","AuthGuard","router","authenticationService","route","state","isAuthenticated","navigate","providedIn","JwtInterceptor","request","next","currentUser","currentUserValue","authdata","clone","setHeaders","Authorization","handle","HomeComponent","userService","users","loadAllUsers","LoginComponent","loading","submitted","loginForm","group","username","required","password","returnUrl","snapshot","queryParams","invalid","login","f","value","pipe","loginInvalid","controls","onSubmit","Employee","Team","Vacation","NewVacationComponent","vacationService","employeeOptions","teamInvalid","vacationForm","startDate","Date","finishDate","autoComplete","valueChanges","lookup","getByName","toString","toLowerCase","results","_","vacationFormValue","valid","createNewVacation","closeDialog","close","reset","option","name","saveVacation","onClear","RegisterComponent","AuthenticationService","http","jwtHelper","currentUserSubject","JSON","parse","localStorage","getItem","asObservable","user","token","access_token","isTokenExpired","body","URLSearchParams","set","headers","options","post","apiUrl","setItem","stringify","removeItem","EmployeeService","get","registration","TeamService","teamName","team","put","t","UserService","VacationService","employees","vacation","TeamDialogComponent","teamService","teamForm","teamToUpdate","setValue","onUpdate","createNewTeam","updateTeam","TeamComponent","showNewTeamDialog","VacationComponent","employeeServie","changeDetectorRefs","formControl","getByRegistration","detectChanges","searchVacationByRegistration","showNewVacationDialog","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport {\n   MatButtonModule,\n   MatToolbarModule,\n   MatIconModule,\n   MatBadgeModule,\n   MatSidenavModule,\n   MatListModule,\n   MatGridListModule,\n   MatFormFieldModule,\n   MatInputModule,\n   MatSelectModule,\n   MatRadioModule,\n   MatDatepickerModule,\n   MatNativeDateModule,\n   MatChipsModule,\n   MatTooltipModule,\n   MatTableModule,\n   MatPaginatorModule,\n   MatCardModule,\n   MatAutocompleteModule\n} from '@angular/material';\n\n@NgModule({\n   imports: [\n      CommonModule,\n      MatAutocompleteModule,\n      MatButtonModule,\n      MatToolbarModule,\n      MatIconModule,\n      MatSidenavModule,\n      MatBadgeModule,\n      MatListModule,\n      MatGridListModule,\n      MatFormFieldModule,\n      MatInputModule,\n      MatSelectModule,\n      MatRadioModule,\n      MatDatepickerModule,\n      MatNativeDateModule,\n      MatChipsModule,\n      MatTooltipModule,\n      MatTableModule,\n      MatPaginatorModule,\n      MatCardModule,\n   ],\n   exports: [\n      MatAutocompleteModule,\n      MatButtonModule,\n      MatToolbarModule,\n      MatIconModule,\n      MatSidenavModule,\n      MatBadgeModule,\n      MatListModule,\n      MatGridListModule,\n      MatInputModule,\n      MatFormFieldModule,\n      MatSelectModule,\n      MatRadioModule,\n      MatDatepickerModule,\n      MatChipsModule,\n      MatTooltipModule,\n      MatTableModule,\n      MatPaginatorModule,\n      MatCardModule\n   ],\n   providers: [\n      MatDatepickerModule,\n   ]\n})\n\nexport class AngularMaterialModule { }","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { HomeComponent } from './home/home.component';\nimport { AuthGuard } from './helpers/auth.guard';\nimport { EmployeeComponent } from './employee/employee.component';\nimport { VacationComponent } from './vacation/vacation.component';\nimport { RegisterComponent } from './register/register.component';\nimport { TeamComponent } from './team/team.component';\n\n\nconst routes: Routes = [\n  { path: 'home', component: HomeComponent, canActivate: [AuthGuard] },\n  { path: 'employee', component: EmployeeComponent, canActivate: [AuthGuard] },\n  { path: 'team', component: TeamComponent, canActivate: [AuthGuard] },\n  { path: 'vacation', component: VacationComponent, canActivate: [AuthGuard] },\n  { path: 'register', component: RegisterComponent, canActivate: [AuthGuard] },\n  { path: '', component: LoginComponent },\n  { path: '**', redirectTo: '' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'register';\n}\n","  <div class=\"wrapper\">\r\n    <app-header></app-header>\r\n    <div class=\"content-wrapper\">\r\n      <div class=\"app-container pb-2 pt-2 pl-4 pr-4 container\">\r\n\r\n        <router-outlet></router-outlet>\r\n\r\n      </div>\r\n    </div>\r\n\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { HomeComponent } from './home/home.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AngularMaterialModule } from './angular.material.module';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { JwtInterceptor } from './helpers/jwt.interceptor';\nimport { EmployeeComponent } from './employee/employee.component';\nimport { VacationComponent } from './vacation/vacation.component';\nimport { RegisterComponent } from './register/register.component';\nimport { TeamComponent } from './team/team.component';\nimport { TeamDialogComponent } from './team-dialog/team-dialog.component';\nimport { HeaderComponent } from './header/header.component';\nimport { NewVacationComponent } from './new-vacation/new-vacation.component';\nimport { JWT_OPTIONS, JwtHelperService } from '@auth0/angular-jwt';\nimport { EditEmployeeComponent } from './edit-employee/edit-employee.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    LoginComponent,\n    EmployeeComponent,\n    VacationComponent,\n    RegisterComponent,\n    TeamComponent,\n    TeamDialogComponent,\n    HeaderComponent,\n    NewVacationComponent,\n    EditEmployeeComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    AngularMaterialModule,\n    FlexLayoutModule,\n    HttpClientModule,\n  ],\n  exports: [\n    FlexLayoutModule\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\n    { provide: JWT_OPTIONS, useValue: JWT_OPTIONS },\n        JwtHelperService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { EmployeeService } from '../services/employee.service';\nimport { Employee } from '../models/employee';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\n\n@Component({\n  selector: 'app-edit-employee',\n  templateUrl: './edit-employee.component.html',\n  styleUrls: ['./edit-employee.component.scss']\n})\nexport class EditEmployeeComponent implements OnInit {\n\n  constructor(private formBuilder: FormBuilder,\n              private employeeService: EmployeeService,\n              public dialogRef: MatDialogRef<EditEmployeeComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: Employee) { }\n\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>edit-employee works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { EmployeeService } from '../services/employee.service';\nimport { EditEmployeeComponent } from '../edit-employee/edit-employee.component';\nimport { MatDialog } from '@angular/material';\n\n@Component({\n  selector: 'app-employee',\n  templateUrl: './employee.component.html'\n})\nexport class EmployeeComponent implements OnInit {\n\n  constructor(private employeeService: EmployeeService,\n              public dialog: MatDialog) { }\n\n  // tslint:disable-next-line: max-line-length\n  displayedColumns: string[] = ['name', 'dateBirth', 'street', 'number', 'complement', 'neighborhood', 'city', 'state', 'contractDate', 'registration'];\n  dataSource = [];\n\n  ngOnInit(): void {\n    this.employeeService.getAll()\n      .subscribe(\n        data => {\n          this.dataSource = data;\n        },\n        error => {\n          console.error(error);\n        });\n  }\n\n  showNewEmployeeDialog(): void {\n    const dialogRef = this.dialog.open(EditEmployeeComponent, {\n      width: '750px'\n    });\n  }\n\n}\n","<mat-table *ngIf=\"dataSource\" [dataSource]=\"dataSource\">\n\n    <ng-container matColumnDef=\"name\">\n        <mat-header-cell *matHeaderCellDef> Name </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\"> {{element.name}} </mat-cell>\n    </ng-container>\n  \n    <ng-container matColumnDef=\"dateBirth\">\n        <mat-header-cell *matHeaderCellDef> Date Birth </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\"> {{element.dateBirth}} </mat-cell>\n    </ng-container>\n  \n    <ng-container matColumnDef=\"street\">\n        <mat-header-cell *matHeaderCellDef> Street </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\"> {{element.street}} </mat-cell>\n    </ng-container>\n  \n    <ng-container matColumnDef=\"number\">\n        <mat-header-cell *matHeaderCellDef> Number </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\"> {{element.number}} </mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"complement\">\n        <mat-header-cell *matHeaderCellDef> Complement </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\"> {{element.complement}} </mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"neighborhood\">\n        <mat-header-cell *matHeaderCellDef> Neighborhood </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\"> {{element.neighborhood}} </mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"city\">\n        <mat-header-cell *matHeaderCellDef> City </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\"> {{element.city}} </mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"state\">\n        <mat-header-cell *matHeaderCellDef> State </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\"> {{element.state}} </mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"contractDate\">\n        <mat-header-cell *matHeaderCellDef> Contract Date </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\"> {{element.contractDate}} </mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"registration\">\n        <mat-header-cell *matHeaderCellDef> Registration </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\"> {{element.registration}} </mat-cell>\n    </ng-container>\n  \n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n    <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\n  </mat-table>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html'\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- Toolbar -->\n<mat-toolbar color=\"primary\" class=\"app-header\">\n    <nav active-menu>\n        <ul class=\"nav nav-pills pull-right\">\n          <li><a class=\"nav-link color-link-nav\" routerLink=\"home\" routerLinkActive=\"active\">Home<span class=\"sr-only\">(current)</span></a></li>\n          <li><a class=\"nav-link color-link-nav\" routerLink=\"employee\" routerLinkActive=\"active\">Employee</a></li>\n          <li><a class=\"nav-link color-link-nav\" routerLink=\"team\" routerLinkActive=\"active\">Team</a></li>\n          <li><a class=\"nav-link color-link-nav\" routerLink=\"vacation\" routerLinkActive=\"active\">Vacation</a></li>\n          <li><a class=\"nav-link color-link-nav\" routerLink=\"register\" routerLinkActive=\"active\">Register</a></li>\n        </ul>\n      </nav>\n</mat-toolbar>","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { AuthenticationService } from '../services/authentication.service';\r\n\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthGuard implements CanActivate {\r\n    constructor(\r\n        private router: Router,\r\n        private authenticationService: AuthenticationService\r\n    ) { }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        if (!this.authenticationService.isAuthenticated()) {\r\n            // authorised so return true\r\n            this.router.navigate(['']);\r\n            return false;\r\n        }\r\n\r\n        // not logged in so redirect to login page with the return url\r\n        return true;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthenticationService } from '../services/authentication.service';\r\n\r\n\r\n@Injectable()\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n    constructor(private authenticationService: AuthenticationService) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        // add authorization header with jwt token if available\r\n        let currentUser = this.authenticationService.currentUserValue;\r\n        if (currentUser && currentUser.authdata) {\r\n            request = request.clone({\r\n                setHeaders: {\r\n                    Authorization: `${currentUser.authdata}`\r\n                }\r\n            });\r\n        } \r\n        /*else{\r\n          request = request.clone({\r\n                setHeaders: {\r\n                    'Content-Type': 'application/x-www-form-urlencoded',\r\n                    Authorization: `Basic Y2xpZW50YXBwOjEyMzQ1Ng==`\r\n                }\r\n            });\r\n        }*/\r\n\r\n        return next.handle(request);\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { first } from 'rxjs/operators';\r\nimport { User } from '../models/user';\r\nimport { AuthenticationService } from '../services/authentication.service';\r\nimport { UserService } from '../services/user.service';\r\n\r\n@Component({ templateUrl: 'home.component.html' })\r\nexport class HomeComponent implements OnInit {\r\ncurrentUser: User;\r\nusers = [];\r\n\r\nconstructor(\r\n        private authenticationService: AuthenticationService,\r\n        private userService: UserService\r\n    ) {\r\n        this.currentUser = this.authenticationService.currentUserValue;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.loadAllUsers();\r\n    }\r\n\r\n    private loadAllUsers() {\r\n        /*this.userService.getAll()\r\n            .pipe(first())\r\n            .subscribe(users => this.users = users);*/\r\n    }\r\n}\r\n","\r\n<h1>Hi Fulano!</h1>\r\n<p>You're logged in with Angular 9!!</p>\r\n<h3>All registered users:</h3>\r\n<!--ul>\r\n  <li *ngFor=\"let user of users\">\r\n    {{user.username}} ({{user.firstName}} {{user.lastName}})\r\n    - <a (click)=\"deleteUser(user.id)\" class=\"text-danger\">Delete</a>\r\n  </li>\r\n</ul-->\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { first } from 'rxjs/operators';\r\nimport { AuthenticationService } from '../services/authentication.service';\r\n\r\n@Component({ templateUrl: 'login.component.html' })\r\nexport class LoginComponent implements OnInit {\r\n    loginForm: FormGroup;\r\n    loading = false;\r\n    submitted = false;\r\n    loginInvalid: boolean;\r\n    returnUrl: string;\r\n\r\n    constructor(\r\n        private formBuilder: FormBuilder,\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        private authenticationService: AuthenticationService\r\n    ) {\r\n        // redirect to home if already logged in\r\n        if (this.authenticationService.currentUserValue) {\r\n            this.router.navigate(['/home']);\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.loginForm = this.formBuilder.group({\r\n            username: ['', Validators.required],\r\n            password: ['', Validators.required]\r\n        });\r\n\r\n        // get return url from route parameters or default to '/'\r\n        this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '';\r\n    }\r\n\r\n    // convenience getter for easy access to form fields\r\n    get f() { return this.loginForm.controls; }\r\n\r\n    onSubmit() {\r\n        this.submitted = true;\r\n\r\n        // stop here if form is invalid\r\n        if (this.loginForm.invalid) {\r\n            console.error('Login inválido');\r\n            return;\r\n        }\r\n\r\n        this.loading = true;\r\n       this.authenticationService.login(this.f.username.value, this.f.password.value)\r\n            .pipe(first())\r\n            .subscribe(\r\n                data => {\r\n                    this.router.navigate([this.returnUrl]);\r\n                },\r\n                error => {\r\n                    console.error(error);\r\n                    this.loginInvalid = true;\r\n                    this.loading = false;\r\n                });\r\n    }\r\n}\r\n","<div class=\"login-wrapper\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n    <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\r\n\r\n      <mat-card class=\"box\">\r\n        <mat-card-header>\r\n          <mat-card-title>Log in</mat-card-title>\r\n        </mat-card-header>\r\n        <mat-error *ngIf=\"loginInvalid\">\r\n          The username and password were not recognised\r\n        </mat-error>\r\n    \r\n          <mat-card-content>\r\n            <mat-form-field class=\"example-full-width\">\r\n              <input matInput placeholder=\"Username\" formControlName=\"username\" required>\r\n              <mat-error>\r\n                Please provide a valid email address\r\n              </mat-error>\r\n            </mat-form-field>            \r\n    \r\n            <mat-form-field class=\"example-full-width\">\r\n              <input matInput placeholder=\"Password\" formControlName=\"password\" required>\r\n              <mat-error>\r\n                Please provide a valid password\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </mat-card-content>\r\n          <button mat-stroked-button color=\"accent\" class=\"btn-block\">Log in</button>        \r\n      </mat-card>\r\n    </form>\r\n  \r\n</div>","export class Employee{\r\n    id?: number;\r\n    name: string;\r\n    dateBirth: Date;\r\n    street: string;\r\n    number: string;\r\n    complement: string;\r\n    neighborhood: string;\r\n    city: string;\r\n    state: string;\r\n    contractDate: Date;\r\n    registration: string;\r\n    iamgeUrl: string;\r\n}","export class Team{\r\n    id?: number;\r\n    name: string;\r\n}","import { Employee } from './employee';\r\n\r\nexport class Vacation{\r\n    id?: number;\r\n    startDate: Date;\r\n    finishDate: Date;\r\n    employees?: Employee;\r\n}","import { Component, OnInit, Inject } from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\nimport { VacationService } from '../services/vacation.service';\nimport { Vacation } from '../models/vacation';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { Observable, of } from 'rxjs';\nimport { Employee } from '../models/employee';\nimport { EmployeeComponent } from '../employee/employee.component';\nimport { EmployeeService } from '../services/employee.service';\nimport { startWith, debounceTime, switchMap, map, catchError } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-new-vacation',\n  templateUrl: './new-vacation.component.html'\n})\nexport class NewVacationComponent implements OnInit {\n\n  vacationForm: FormGroup;\n  employeeOptions: Observable<Employee> = null;\n  loading = false;\n  teamInvalid = false;\n  teamToUpdate: Vacation;\n\n  constructor(private formBuilder: FormBuilder,\n    private vacationService: VacationService,\n    private employeeService: EmployeeService,\n    public dialogRef: MatDialogRef<NewVacationComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: Vacation) { }\n\n  ngOnInit(): void {\n    this.vacationForm = this.formBuilder.group({\n      startDate: new FormControl(new Date()),\n      finishDate: new FormControl(new Date()),\n      autoComplete: ['', Validators.required]\n    });\n\n    this.employeeOptions = this.vacationForm.controls['autoComplete'].valueChanges.pipe(\n      startWith(''),\n      // delay emits\n      debounceTime(300),\n      // use switch map so as to cancel previous subscribed events, before creating new once\n      switchMap(value => {\n        if (value !== '') {\n          // lookup from github\n          return this.lookup(value);\n        } else {\n          // if no value is present, return null\n          return of(null);\n        }\n      })\n    )\n\n  }\n\n  lookup(value: string): Observable<Employee[]> {\n    return this.employeeService.getByName(value.toString().toLowerCase()).pipe(\n      // map the item property of the github results as our return object\n      map(results => results),\n      // catch errors\n      catchError(_ => {\n        return of(null);\n      })\n    );\n  }\n\n  saveVacation(vacationFormValue) {\n    if (this.vacationForm.valid) {\n\n      this.vacationService.createNewVacation(vacationFormValue.startDate, vacationFormValue.finishDate, vacationFormValue.autoComplete)\n        .subscribe(data => {\n          this.closeDialog();\n        }, error => {\n          console.error(error);\n        });\n    }\n  }\n\n  closeDialog() {\n    this.dialogRef.close();\n  }\n\n  onClear() {\n    // tslint:disable-next-line: no-unused-expression\n    this.vacationForm.reset;\n  }\n\n  getOptionText(option) {\n    if (option) {\n      return option.name;\n    }\n    return '';\n  }\n\n}\n","<div fxLayout=\"row\" fxLayoutAlign=\"start center\" >\n  <form [formGroup]=\"vacationForm\" class=\"example-form\" (ngSubmit)=\"saveVacation(vacationForm.value)\">\n    <div fxLayout=\"row\" >\n          <div class=\"col-4\">\n              <mat-form-field class=\"example-full-width\">\n                <input type=\"text\"\n                       placeholder=\"Enter a employee name\"\n                       aria-label=\"Number\"\n                       matInput\n                       formControlName=\"autoComplete\"\n                       [matAutocomplete]=\"auto\">\n                <mat-autocomplete autoActiveFirstOption #auto=\"matAutocomplete\" [displayWith]=\"getOptionText\">\n                  <mat-option *ngFor=\"let option of employeeOptions | async\" [value]=\"option\">\n                    {{option.name}}\n                  </mat-option>\n                </mat-autocomplete>\n              </mat-form-field>\n          </div>\n            <div class=\"col-4\">\n                <mat-form-field>\n                    <mat-label>Início das Férias</mat-label>\n                    <input matInput [matDatepicker]=\"picker1\" formControlName=\"startDate\">\n                    <mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\n                    <mat-datepicker #picker1></mat-datepicker>\n                  </mat-form-field>\n            </div>\n            <div class=\"col-4\">\n                <mat-form-field>\n                  <mat-label>Fim das Férias</mat-label>\n                  <input matInput [matDatepicker]=\"picker2\" formControlName=\"finishDate\">\n                  <mat-datepicker-toggle matSuffix [for]=\"picker2\"></mat-datepicker-toggle>\n                  <mat-datepicker #picker2></mat-datepicker>\n                </mat-form-field>\n            </div>\n          </div>\n          <div fxLayout=\"row\" >\n            <div div fxLayout=\"row\" fxLayoutAlign=\"end center\"  >\n                <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"vacationForm.invalid\">Submit</button>\n                <button mat-raised-button color=\"warn\" (click)=\"onClear()\">Clear</button>\n            </div>\n          </div>\n      </form>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>register works!</p>\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHandler, HttpHeaders } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\n\r\n\r\nimport { environment } from 'src/environments/environment';\r\nimport { User } from '../models/user';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthenticationService {\r\n    private currentUserSubject: BehaviorSubject<User>;\r\n    public currentUser: Observable<User>;\r\n\r\n    constructor(private http: HttpClient,\r\n                public jwtHelper: JwtHelperService) {\r\n        this.currentUserSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('currentUser')));\r\n        this.currentUser = this.currentUserSubject.asObservable();\r\n    }\r\n\r\n    public get currentUserValue(): User {\r\n        return JSON.parse(localStorage.getItem('currentUser'));\r\n    }\r\n\r\n    public isAuthenticated(): boolean {\r\n\r\n        let user = JSON.parse(localStorage.getItem('currentUser'));\r\n        if (!user) {\r\n            return false;\r\n        }\r\n        const token = user.access_token;\r\n        // Check whether the token is expired and return\r\n        // true or false\r\n        return !this.jwtHelper.isTokenExpired(token);\r\n\r\n    }\r\n\r\n    login(username: string, password: string) {\r\n        const body = new URLSearchParams();\r\n        body.set('username', username);\r\n        body.set('password', password);\r\n        body.set('grant_type', 'password');\r\n\r\n        const headers = new HttpHeaders(\r\n            {\r\n                'Content-Type': 'application/x-www-form-urlencoded',\r\n                Authorization: `Basic Y2xpZW50YXBwOjEyMzQ1Ng==`\r\n            }\r\n        );\r\n        const options = { headers };\r\n\r\n        /*const user = {\r\n            id: 1,\r\n            username:  'Test',\r\n            password:  '123456',\r\n            firstName :  'test',\r\n            lastName :  'test',\r\n            authdata : 'Bearer lklçadhofda'\r\n        };*/\r\n        /*localStorage.setItem('currentUser', JSON.stringify(user));\r\n        this.currentUserSubject.next(user);\r\n        return user;*/\r\n\r\n\r\n        return this.http.post<any>(`${environment.apiUrl}/auth/oauth/token`, body.toString(), options)\r\n            .pipe(map(user => {\r\n                // store user details and basic auth credentials in local storage to keep user logged in between page refreshes\r\n                user.authdata = user.access_token;\r\n                localStorage.setItem('currentUser', JSON.stringify(user));\r\n                this.currentUserSubject.next(user);\r\n                return user;\r\n            }));\r\n    }\r\n\r\n    logout() {\r\n        // remove user from local storage to log user out\r\n        localStorage.removeItem('currentUser');\r\n        this.currentUserSubject.next(null);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Employee } from '../models/employee';\r\n\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class EmployeeService {\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getAll() {\r\n        return this.http.get<Employee[]>(`${environment.apiUrl}/employee/employees`);\r\n    }\r\n\r\n    getByRegistration(registration: string) {\r\n        return this.http.get<Employee[]>(`${environment.apiUrl}/employee/employeeByRegistration?registration=${registration}`);\r\n    }\r\n\r\n    getByName(name: string) {\r\n        return this.http.get<Employee[]>(`${environment.apiUrl}/employee/employeeByName?name=${name}`);\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Team } from '../models/team';\r\nimport { map } from 'rxjs/operators';\r\n\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class TeamService {\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getAll() {\r\n        return this.http.get<Team[]>(`${environment.apiUrl}/team/teams`);\r\n    }\r\n\r\n    createNewTeam(teamName: string) {\r\n\r\n        const headers = new HttpHeaders(\r\n            {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        );\r\n        const options = { headers};\r\n\r\n        const body: Team = {\r\n            name : teamName\r\n        };\r\n\r\n        return this.http.post<any>(`${environment.apiUrl}/team/createTeam`, body, options)\r\n            .pipe(map(team => {\r\n                return team;\r\n            }));\r\n    }\r\n\r\n    updateTeam(team: Team) {\r\n        const headers = new HttpHeaders(\r\n            {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        );\r\n        const options = { headers};\r\n\r\n        return this.http.put<any>(`${environment.apiUrl}/team/updateTeam/` + team.id, team, options)\r\n            .pipe(map(t => {\r\n                return t;\r\n            }));\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { User } from '../models/user';\r\n\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class UserService {\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getAll() {\r\n        return this.http.get<User[]>(`${environment.apiUrl}/users`);\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { map } from 'rxjs/operators';\r\nimport { Vacation } from '../models/vacation';\r\nimport { Employee } from '../models/employee';\r\n\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class VacationService {\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getAll() {\r\n        return this.http.get<Vacation[]>(`${environment.apiUrl}/vacation/vacations`);\r\n    }\r\n\r\n    getByRegistration(registration: string){\r\n        return this.http.get<Vacation[]>(`${environment.apiUrl}/vacation/vacationByRegistration?registration=${registration}`);\r\n    }\r\n\r\n    createNewVacation(startDate: Date, finishDate: Date, employees: Employee) {\r\n\r\n        const headers = new HttpHeaders(\r\n            {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        );\r\n        const options = { headers };\r\n\r\n        const body: Vacation = {\r\n\r\n            startDate: startDate,\r\n            finishDate: finishDate,\r\n            employees: employees\r\n        };\r\n\r\n        return this.http.post<any>(`${environment.apiUrl}/vacation/createVacation`, body, options)\r\n            .pipe(map(vacation => {\r\n                return vacation;\r\n            }));\r\n    }\r\n\r\n    updateTeam(vacation: Vacation) {\r\n        const headers = new HttpHeaders(\r\n            {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        );\r\n        const options = { headers };\r\n\r\n        return this.http.put<any>(`${environment.apiUrl}/vacation/updateVacation/` + vacation.id, vacation, options)\r\n            .pipe(map(t => {\r\n                return t;\r\n            }));\r\n    }\r\n}","import { Component, OnInit, Inject } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { TeamService } from '../services/team.service';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { Team } from '../models/team';\n\n@Component({\n  selector: 'app-team-dialog',\n  templateUrl: './team-dialog.component.html'\n})\nexport class TeamDialogComponent implements OnInit {\n\n  teamForm: FormGroup;\n  loading = false;\n  teamInvalid = false;\n  teamToUpdate: Team;\n\n  constructor(private formBuilder: FormBuilder,\n              private teamService: TeamService,\n              public dialogRef: MatDialogRef<TeamDialogComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: Team) { }\n\n  ngOnInit(): void {\n    this.teamForm = this.formBuilder.group({\n      name: ['', Validators.required]\n    });\n    this.teamToUpdate = this.data;\n    this.f.name.setValue(this.data.name);\n  }\n\n  // convenience getter for easy access to form fields\n  get f() { return this.teamForm.controls; }\n\n  onSubmit() {\n\n    // stop here if form is invalid\n    if (this.teamForm.invalid) {\n        console.error('Login inválido');\n        return;\n    }\n\n    if(this.teamToUpdate != null){\n      this.onUpdate();\n      return;\n    }\n\n    this.loading = true;\n    this.teamService.createNewTeam(this.f.name.value)\n          .subscribe(\n              data => {\n              },\n              error => {\n                  console.error(error);\n                  this.teamInvalid = true;\n                  this.loading = false;\n              });\n  }\n\n  onUpdate() {\n    this.teamToUpdate.name = this.f.name.value;\n    this.teamService.updateTeam(this.teamToUpdate)\n    .subscribe(\n        data => {\n          this.closeDialog();\n        },\n        error => {\n            console.error(error);\n            this.teamInvalid = true;\n            this.loading = false;\n        });\n  }\n\n  closeDialog() {\n    this.dialogRef.close();\n  }\n\n  onClear(){\n    // tslint:disable-next-line: no-unused-expression\n    this.teamForm.reset;\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-2 close-div\" >\n      <button mat-icon-button (click)=\"closeDialog()\">\n        <mat-icon>close</mat-icon>\n      </button>\n    </div>\n</div>\n<div class=\"row\">\n    <form [formGroup]=\"teamForm\" class=\"normal-form\">\n        <mat-error *ngIf=\"teamInvalid\">\n            The team were not recognised\n          </mat-error>\n        <mat-form-field>\n            <input formControlName=\"name\" matInput placeholder=\"Team Name*\">\n            <mat-error>This field is mandatory.</mat-error>\n          </mat-form-field>\n          <div class=\"button-row\">\n            <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"teamForm.invalid\" (click)=\"onSubmit()\">Submit</button>\n            <button mat-raised-button color=\"warn\" (click)=\"onClear()\">Clear</button>\n          </div>\n    </form>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { TeamService } from '../services/team.service';\nimport { TeamDialogComponent } from '../team-dialog/team-dialog.component';\nimport { MatDialog } from '@angular/material';\nimport { Team } from '../models/team';\n\n@Component({\n  selector: 'app-team',\n  templateUrl: './team.component.html'\n})\nexport class TeamComponent implements OnInit {\n\n  constructor(private teamService: TeamService, public dialog: MatDialog) { }\n\n  displayedColumns: string[] = ['id', 'name'];\n  dataSource = [];\n\n  ngOnInit(): void {\n    this.teamService.getAll()\n    .subscribe(\n        data => {\n            this.dataSource = data;\n        },\n        error => {\n            console.error(error);\n        });\n  }\n\n  showNewTeamDialog(): void {\n    const dialogRef = this.dialog.open(TeamDialogComponent, {\n      width: '750px'\n    });\n  }\n\n  showUpdateTeamDialog(team: Team): void {\n    const dialogRef = this.dialog.open(TeamDialogComponent, {\n      width: '750px',\n      data: team\n    });\n  }\n\n}\n","<button mat-raised-button color=\"primary\" (click)=\"showNewTeamDialog()\">New Team</button>\n<mat-table *ngIf=\"dataSource\" [dataSource]=\"dataSource\">\n\n    <ng-container matColumnDef=\"id\">\n        <mat-header-cell *matHeaderCellDef> Id </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\">\n            <a class=\"laranja\" routerLink=\".\" (click)=\"showUpdateTeamDialog(element)\">{{element.id}}</a>\n        </mat-cell>\n    </ng-container>\n  \n    <ng-container matColumnDef=\"name\">\n        <mat-header-cell *matHeaderCellDef> Name </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\"> {{element.name}} </mat-cell>\n    </ng-container>\n  \n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n    <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\n  </mat-table>\n","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { Vacation } from '../models/vacation';\nimport { VacationService } from '../services/vacation.service';\nimport { FormControl } from '@angular/forms';\nimport { EmployeeService } from '../services/employee.service';\nimport { Observable } from 'rxjs';\nimport { NewVacationComponent } from '../new-vacation/new-vacation.component';\nimport { MatDialog } from '@angular/material';\n\n@Component({\n  selector: 'app-vacation',\n  templateUrl: './vacation.component.html'\n})\nexport class VacationComponent implements OnInit {\n\n  constructor(private vacationService: VacationService,\n              private employeeServie: EmployeeService,\n              public dialog: MatDialog,\n              private changeDetectorRefs: ChangeDetectorRef) { }\n\n  displayedColumns: string[] = ['id', 'startDate', 'finishDate'];\n  dataSource = [];\n  formControl = new FormControl();\n  filteredOptions: Observable<string[]>;\n\n  ngOnInit(): void {\n  }\n\n  searchVacationByRegistration(){\n    this.vacationService.getByRegistration(this.formControl.value)\n    .subscribe(\n      data => {\n          this.dataSource = data;\n          this.changeDetectorRefs.detectChanges();\n      },\n      error => {\n          console.error(error);\n          this.dataSource = [];\n          this.changeDetectorRefs.detectChanges();\n      });\n  }\n\n  getAll() {\n    this.vacationService.getAll()\n    .subscribe(\n        data => {\n            this.dataSource = data;\n            this.changeDetectorRefs.detectChanges();\n        },\n        error => {\n            console.error(error);\n            this.changeDetectorRefs.detectChanges();\n        });\n  }\n\n  searchEmployees(){\n    this.employeeServie.getByRegistration(this.formControl.value)\n    .subscribe(\n      data => {\n          this.dataSource = data;\n      },\n      error => {\n          console.error(error);\n      });\n  }\n\n  showNewVacationDialog(): void {\n    const dialogRef = this.dialog.open(NewVacationComponent, {\n      width: '750px'\n    });\n  }\n\n  showUpdateVacationDialog(vacation: Vacation): void {\n\n  }\n\n}\n","\n  <div class=\"input-row\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\n    <mat-form-field fxFlex style=\"width: 40%;\">\n      <input type=\"text\" placeholder=\"Enter a employee registration\" aria-label=\"Registration\" matInput\n        [formControl]=\"formControl\" [matAutocomplete]=\"auto\">\n      <mat-autocomplete autoActiveFirstOption #auto=\"matAutocomplete\">\n        <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option\">\n          {{option}}\n        </mat-option>\n      </mat-autocomplete>\n    </mat-form-field>\n\n  </div>\n  <div class=\"input-row\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\n    <button mat-raised-button (click)=\"searchVacationByRegistration()\">Search</button>\n    <button mat-raised-button (click)=\"showNewVacationDialog()\">New Vacation</button>\n  </div>\n\n<div class=\"example-container mat-elevation-z8\">\n  <mat-table *ngIf=\"dataSource.length > 0\" [dataSource]=\"dataSource\">\n\n    <ng-container matColumnDef=\"id\">\n      <mat-header-cell *matHeaderCellDef> Id </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\">\n        <a class=\"laranja\" routerLink=\".\" (click)=\"showUpdateVacationDialog(element)\">{{element.id}}</a>\n      </mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"startDate\">\n      <mat-header-cell *matHeaderCellDef> Start Date </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{element.startDate | date}} </mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"finishDate\">\n      <mat-header-cell *matHeaderCellDef> Finish Date </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{element.finishDate | date}} </mat-cell>\n    </ng-container>\n\n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n    <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\n  </mat-table>\n</div>\n<!-- </div>\n<div> -->","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:8080/api'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}
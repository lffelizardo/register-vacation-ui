{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/angular.material.module.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/edit-employee/edit-employee.component.ts","./src/app/edit-employee/edit-employee.component.html","./src/app/employee/employee.component.ts","./src/app/employee/employee.component.html","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/helpers/auth.guard.ts","./src/app/helpers/jwt.interceptor.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/models/employee.ts","./src/app/models/team.ts","./src/app/models/vacation.ts","./src/app/new-vacation/new-vacation.component.ts","./src/app/new-vacation/new-vacation.component.html","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/services/authentication.service.ts","./src/app/services/employee.service.ts","./src/app/services/team.service.ts","./src/app/services/user.service.ts","./src/app/services/vacation.service.ts","./src/app/team-dialog/team-dialog.component.ts","./src/app/team-dialog/team-dialog.component.html","./src/app/team/team.component.ts","./src/app/team/team.component.html","./src/app/vacation/vacation.component.ts","./src/app/vacation/vacation.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AAsBpB;;AAkDpB,MAAM,qBAAqB;;oGAArB,qBAAqB;oKAArB,qBAAqB,mBALpB;QACR,qEAAmB;KACrB,YA5CQ;YACN,4DAAY;YACZ,uEAAqB;YACrB,iEAAe;YACf,kEAAgB;YAChB,+DAAa;YACb,kEAAgB;YAChB,gEAAc;YACd,+DAAa;YACb,mEAAiB;YACjB,oEAAkB;YAClB,gEAAc;YACd,iEAAe;YACf,gEAAc;YACd,qEAAmB;YACnB,qEAAmB;YACnB,gEAAc;YACd,kEAAgB;YAChB,gEAAc;YACd,oEAAkB;YAClB,+DAAa;SACf;QAEE,uEAAqB;QACrB,iEAAe;QACf,kEAAgB;QAChB,+DAAa;QACb,kEAAgB;QAChB,gEAAc;QACd,+DAAa;QACb,mEAAiB;QACjB,gEAAc;QACd,oEAAkB;QAClB,iEAAe;QACf,gEAAc;QACd,qEAAmB;QACnB,gEAAc;QACd,kEAAgB;QAChB,gEAAc;QACd,oEAAkB;QAClB,+DAAa;mIAON,qBAAqB,cA9C5B,4DAAY;QACZ,uEAAqB;QACrB,iEAAe;QACf,kEAAgB;QAChB,+DAAa;QACb,kEAAgB;QAChB,gEAAc;QACd,+DAAa;QACb,mEAAiB;QACjB,oEAAkB;QAClB,gEAAc;QACd,iEAAe;QACf,gEAAc;QACd,qEAAmB;QACnB,qEAAmB;QACnB,gEAAc;QACd,kEAAgB;QAChB,gEAAc;QACd,oEAAkB;QAClB,+DAAa,aAGb,uEAAqB;QACrB,iEAAe;QACf,kEAAgB;QAChB,+DAAa;QACb,kEAAgB;QAChB,gEAAc;QACd,+DAAa;QACb,mEAAiB;QACjB,gEAAc;QACd,oEAAkB;QAClB,iEAAe;QACf,gEAAc;QACd,qEAAmB;QACnB,gEAAc;QACd,kEAAgB;QAChB,gEAAc;QACd,oEAAkB;QAClB,+DAAa;6FAON,qBAAqB;cAhDjC,sDAAQ;eAAC;gBACP,OAAO,EAAE;oBACN,4DAAY;oBACZ,uEAAqB;oBACrB,iEAAe;oBACf,kEAAgB;oBAChB,+DAAa;oBACb,kEAAgB;oBAChB,gEAAc;oBACd,+DAAa;oBACb,mEAAiB;oBACjB,oEAAkB;oBAClB,gEAAc;oBACd,iEAAe;oBACf,gEAAc;oBACd,qEAAmB;oBACnB,qEAAmB;oBACnB,gEAAc;oBACd,kEAAgB;oBAChB,gEAAc;oBACd,oEAAkB;oBAClB,+DAAa;iBACf;gBACD,OAAO,EAAE;oBACN,uEAAqB;oBACrB,iEAAe;oBACf,kEAAgB;oBAChB,+DAAa;oBACb,kEAAgB;oBAChB,gEAAc;oBACd,+DAAa;oBACb,mEAAiB;oBACjB,gEAAc;oBACd,oEAAkB;oBAClB,iEAAe;oBACf,gEAAc;oBACd,qEAAmB;oBACnB,gEAAc;oBACd,kEAAgB;oBAChB,gEAAc;oBACd,oEAAkB;oBAClB,+DAAa;iBACf;gBACD,SAAS,EAAE;oBACR,qEAAmB;iBACrB;aACH;;;;;;;;;;;;;;ACvED;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACE;AACH;AACL;AACiB;AACA;AACA;AACZ;;;AAGtD,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,kEAAa,EAAE,WAAW,EAAE,CAAC,6DAAS,CAAC,EAAE;IACpE,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,8EAAiB,EAAE,WAAW,EAAE,CAAC,6DAAS,CAAC,EAAE;IAC5E,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,kEAAa,EAAE,WAAW,EAAE,CAAC,6DAAS,CAAC,EAAE;IACpE,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,8EAAiB,EAAE,WAAW,EAAE,CAAC,6DAAS,CAAC,EAAE;IAC5E,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,8EAAiB,EAAE,WAAW,EAAE,CAAC,6DAAS,CAAC,EAAE;IAC5E,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,qEAAc,EAAE;IACvC,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,EAAE,EAAE;CAC/B,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;QAChD,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;gBAC1D,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACxBD;AAAA;AAAA;AAAA;AAAA;AAA0C;;;;AAOnC,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,UAAU,CAAC;KACpB;;wEAFY,YAAY;4FAAZ,YAAY;QCPvB,yEACE;QAAA,wEAAyB;QACzB,yEACE;QAAA,yEAEE;QAAA,2EAA+B;QAEjC,4DAAM;QACR,4DAAM;QAEV,4DAAM;;6FDHO,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AACyB;AAEV;AACT;AACU;AACH;AACyB;AACb;AACV;AACmB;AAChB;AACO;AACA;AACA;AACZ;AACoB;AACd;AACiB;AACV;AACa;;AAoCzE,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAPT;QACT,EAAE,OAAO,EAAE,uEAAiB,EAAE,QAAQ,EAAE,wEAAc,EAAE,KAAK,EAAE,IAAI,EAAE;QACrE,EAAE,OAAO,EAAE,+DAAW,EAAE,QAAQ,EAAE,+DAAW,EAAE;QAC3C,oEAAgB;KACrB,YAjBQ;YACP,uEAAa;YACb,oEAAgB;YAChB,0DAAW;YACX,kEAAmB;YACnB,4FAAuB;YACvB,8EAAqB;YACrB,qEAAgB;YAChB,sEAAgB;SACjB;QAEC,qEAAgB;mIASP,SAAS,mBAhClB,2DAAY;QACZ,kEAAa;QACb,qEAAc;QACd,+EAAiB;QACjB,+EAAiB;QACjB,+EAAiB;QACjB,mEAAa;QACb,uFAAmB;QACnB,yEAAe;QACf,0FAAoB;QACpB,6FAAqB,aAGrB,uEAAa;QACb,oEAAgB;QAChB,0DAAW;QACX,kEAAmB;QACnB,4FAAuB;QACvB,8EAAqB;QACrB,qEAAgB;QAChB,sEAAgB,aAGhB,qEAAgB;6FASP,SAAS;cAlCrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,kEAAa;oBACb,qEAAc;oBACd,+EAAiB;oBACjB,+EAAiB;oBACjB,+EAAiB;oBACjB,mEAAa;oBACb,uFAAmB;oBACnB,yEAAe;oBACf,0FAAoB;oBACpB,6FAAqB;iBACtB;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,oEAAgB;oBAChB,0DAAW;oBACX,kEAAmB;oBACnB,4FAAuB;oBACvB,8EAAqB;oBACrB,qEAAgB;oBAChB,sEAAgB;iBACjB;gBACD,OAAO,EAAE;oBACP,qEAAgB;iBACjB;gBACD,SAAS,EAAE;oBACT,EAAE,OAAO,EAAE,uEAAiB,EAAE,QAAQ,EAAE,wEAAc,EAAE,KAAK,EAAE,IAAI,EAAE;oBACrE,EAAE,OAAO,EAAE,+DAAW,EAAE,QAAQ,EAAE,+DAAW,EAAE;oBAC3C,oEAAgB;iBACrB;gBACD,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;ACxDD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AAIQ;;;;;;AAO3D,MAAM,qBAAqB;IAEhC,YAAoB,WAAwB,EACxB,eAAgC,EACjC,SAA8C,EACrB,IAAc;QAHtC,gBAAW,GAAX,WAAW,CAAa;QACxB,oBAAe,GAAf,eAAe,CAAiB;QACjC,cAAS,GAAT,SAAS,CAAqC;QACrB,SAAI,GAAJ,IAAI,CAAU;IAAI,CAAC;IAG/D,QAAQ;IACR,CAAC;;0FATU,qBAAqB,6cAKZ,iEAAe;qGALxB,qBAAqB;QCXlC,oEAAG;QAAA,+EAAoB;QAAA,4DAAI;;6FDWd,qBAAqB;cALjC,uDAAS;eAAC;gBACT,QAAQ,EAAE,mBAAmB;gBAC7B,WAAW,EAAE,gCAAgC;gBAC7C,SAAS,EAAE,CAAC,gCAAgC,CAAC;aAC9C;;sBAMc,oDAAM;uBAAC,iEAAe;;;;;;;;;;;;;;AEhBrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAE+B;;;;;;ICCzE,kFAAoC;IAAA,iEAAK;IAAA,4DAAkB;;;IAC3D,2EAAqC;IAAA,uDAAiB;IAAA,4DAAW;;;IAA5B,0DAAiB;IAAjB,4FAAiB;;;IAItD,kFAAoC;IAAA,uEAAW;IAAA,4DAAkB;;;IACjE,2EAAqC;IAAA,uDAAsB;IAAA,4DAAW;;;IAAjC,0DAAsB;IAAtB,iGAAsB;;;IAI3D,kFAAoC;IAAA,mEAAO;IAAA,4DAAkB;;;IAC7D,2EAAqC;IAAA,uDAAmB;IAAA,4DAAW;;;IAA9B,0DAAmB;IAAnB,8FAAmB;;;IAIxD,kFAAoC;IAAA,mEAAO;IAAA,4DAAkB;;;IAC7D,2EAAqC;IAAA,uDAAmB;IAAA,4DAAW;;;IAA9B,0DAAmB;IAAnB,8FAAmB;;;IAIxD,kFAAoC;IAAA,uEAAW;IAAA,4DAAkB;;;IACjE,2EAAqC;IAAA,uDAAuB;IAAA,4DAAW;;;IAAlC,0DAAuB;IAAvB,kGAAuB;;;IAI5D,kFAAoC;IAAA,yEAAa;IAAA,4DAAkB;;;IACnE,2EAAqC;IAAA,uDAAyB;IAAA,4DAAW;;;IAApC,0DAAyB;IAAzB,oGAAyB;;;IAI9D,kFAAoC;IAAA,iEAAK;IAAA,4DAAkB;;;IAC3D,2EAAqC;IAAA,uDAAiB;IAAA,4DAAW;;;IAA5B,0DAAiB;IAAjB,4FAAiB;;;IAItD,kFAAoC;IAAA,kEAAM;IAAA,4DAAkB;;;IAC5D,2EAAqC;IAAA,uDAAkB;IAAA,4DAAW;;;IAA7B,0DAAkB;IAAlB,6FAAkB;;;IAIvD,kFAAoC;IAAA,0EAAc;IAAA,4DAAkB;;;IACpE,2EAAqC;IAAA,uDAAyB;IAAA,4DAAW;;;IAApC,0DAAyB;IAAzB,oGAAyB;;;IAI9D,kFAAoC;IAAA,yEAAa;IAAA,4DAAkB;;;IACnE,2EAAqC;IAAA,uDAAyB;IAAA,4DAAW;;;IAApC,0DAAyB;IAAzB,oGAAyB;;;IAGlE,4EAAqE;;;IACrE,qEAAoE;;;IArDxE,+EAEI;IAAA,2EACI;IAAA,iJAAoC;IACpC,mIAAqC;IACzC,qEAAe;IAEf,2EACI;IAAA,iJAAoC;IACpC,mIAAqC;IACzC,qEAAe;IAEf,2EACI;IAAA,iJAAoC;IACpC,mIAAqC;IACzC,qEAAe;IAEf,4EACI;IAAA,mJAAoC;IACpC,qIAAqC;IACzC,qEAAe;IAEf,4EACI;IAAA,mJAAoC;IACpC,qIAAqC;IACzC,qEAAe;IAEf,4EACI;IAAA,mJAAoC;IACpC,qIAAqC;IACzC,qEAAe;IAEf,6EACI;IAAA,mJAAoC;IACpC,qIAAqC;IACzC,qEAAe;IAEf,6EACI;IAAA,mJAAoC;IACpC,qIAAqC;IACzC,qEAAe;IAEf,6EACI;IAAA,mJAAoC;IACpC,qIAAqC;IACzC,qEAAe;IAEf,6EACI;IAAA,mJAAoC;IACpC,qIAAqC;IACzC,qEAAe;IAEf,kJAAoD;IACpD,oIAA0D;IAC5D,4DAAY;;;IAtDgB,yFAAyB;IAoDnC,2DAAmC;IAAnC,oGAAmC;IAC1C,0DAAgD;IAAhD,qGAAgD;;AD5CtD,MAAM,iBAAiB;IAE5B,YAAoB,eAAgC,EACjC,MAAiB;QADhB,oBAAe,GAAf,eAAe,CAAiB;QACjC,WAAM,GAAN,MAAM,CAAW;QAEpC,4CAA4C;QAC5C,qBAAgB,GAAa,CAAC,MAAM,EAAE,WAAW,EAAE,QAAQ,EAAE,QAAQ,EAAE,YAAY,EAAE,cAAc,EAAE,MAAM,EAAE,OAAO,EAAE,cAAc,EAAE,cAAc,CAAC,CAAC;QACtJ,eAAU,GAAG,EAAE,CAAC;IAJwB,CAAC;IAMzC,QAAQ;QACN,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE;aAC1B,SAAS,CACR,IAAI,CAAC,EAAE;YACL,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACzB,CAAC,EACD,KAAK,CAAC,EAAE;YACN,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACvB,CAAC,CAAC,CAAC;IACT,CAAC;IAED,qBAAqB;QACnB,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,4FAAqB,EAAE;YACxD,KAAK,EAAE,OAAO;SACf,CAAC,CAAC;IACL,CAAC;;kFAxBU,iBAAiB;iGAAjB,iBAAiB;QCT9B,0HAEI;;QAFO,gFAAkB;;6FDShB,iBAAiB;cAJ7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;aACzC;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;AAM3C,MAAM,eAAe;IAE1B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;8EALU,eAAe;+FAAf,eAAe;QCL5B,iFACI;QAAA,yEACI;QAAA,wEACE;QAAA,qEAAI;QAAA,uEAA+E;QAAA,+DAAI;QAAA,0EAAsB;QAAA,oEAAS;QAAA,4DAAO;QAAA,4DAAI;QAAA,4DAAK;QACtI,qEAAI;QAAA,uEAAmF;QAAA,oEAAQ;QAAA,4DAAI;QAAA,4DAAK;QACxG,sEAAI;QAAA,wEAA+E;QAAA,gEAAI;QAAA,4DAAI;QAAA,4DAAK;QAChG,sEAAI;QAAA,wEAAmF;QAAA,oEAAQ;QAAA,4DAAI;QAAA,4DAAK;QACxG,sEAAI;QAAA,wEAAmF;QAAA,oEAAQ;QAAA,4DAAI;QAAA,4DAAK;QAC1G,4DAAK;QACP,4DAAM;QACZ,4DAAc;;6FDLD,eAAe;cAJ3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;aACvC;;;;;;;;;;;;;;AELD;AAAA;AAAA;AAAA;AAAA;AAA2C;;;;AAMpC,MAAM,SAAS;IAClB,YACY,MAAc,EACd,qBAA4C;QAD5C,WAAM,GAAN,MAAM,CAAQ;QACd,0BAAqB,GAArB,qBAAqB,CAAuB;IACpD,CAAC;IAEL,WAAW,CAAC,KAA6B,EAAE,KAA0B;QACjE,IAAI,CAAC,IAAI,CAAC,qBAAqB,CAAC,eAAe,EAAE,EAAE;YAC/C,4BAA4B;YAC5B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAC3B,OAAO,KAAK,CAAC;SAChB;QAED,8DAA8D;QAC9D,OAAO,IAAI,CAAC;IAChB,CAAC;;kEAfQ,SAAS;4FAAT,SAAS,WAAT,SAAS,mBADI,MAAM;6FACnB,SAAS;cADrB,wDAAU;eAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;;;;;;;;;;;;;ACLlC;AAAA;AAAA;AAAA;AAA2C;;;AAOpC,MAAM,cAAc;IACvB,YAAoB,qBAA4C;QAA5C,0BAAqB,GAArB,qBAAqB,CAAuB;IAAI,CAAC;IAErE,SAAS,CAAC,OAAyB,EAAE,IAAiB;QAClD,uDAAuD;QACvD,IAAI,WAAW,GAAG,IAAI,CAAC,qBAAqB,CAAC,gBAAgB,CAAC;QAC9D,IAAI,WAAW,IAAI,WAAW,CAAC,QAAQ,EAAE;YACrC,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC;gBACpB,UAAU,EAAE;oBACR,aAAa,EAAE,GAAG,WAAW,CAAC,QAAQ,EAAE;iBAC3C;aACJ,CAAC,CAAC;SACN;QACD;;;;;;;WAOG;QAEH,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IAChC,CAAC;;4EAvBQ,cAAc;iGAAd,cAAc,WAAd,cAAc;6FAAd,cAAc;cAD1B,wDAAU;;;;;;;;;;;;;;ACNX;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;AAO3C,MAAM,aAAa;IAI1B,YACgB,qBAA4C,EAC5C,WAAwB;QADxB,0BAAqB,GAArB,qBAAqB,CAAuB;QAC5C,gBAAW,GAAX,WAAW,CAAa;QAJxC,UAAK,GAAG,EAAE,CAAC;QAMH,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,qBAAqB,CAAC,gBAAgB,CAAC;IACnE,CAAC;IAED,QAAQ;QACJ,IAAI,CAAC,YAAY,EAAE,CAAC;IACxB,CAAC;IAEO,YAAY;QAChB;;sDAE8C;IAClD,CAAC;;0EAnBQ,aAAa;6FAAb,aAAa;QCN1B,qEAAI;QAAA,qEAAU;QAAA,4DAAK;QACnB,oEAAG;QAAA,4FAAiC;QAAA,4DAAI;QACxC,qEAAI;QAAA,gFAAqB;QAAA,4DAAK;;6FDIjB,aAAa;cADzB,uDAAS;eAAC,EAAE,WAAW,EAAE,qBAAqB,EAAE;;;;;;;;;;;;;;AENjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAEkB;AAC7B;;;;;;;;;ICI/B,4EACE;IAAA,0GACF;IAAA,4DAAY;;ADFb,MAAM,cAAc;IAOvB,YACY,WAAwB,EACxB,KAAqB,EACrB,MAAc,EACd,qBAA4C;QAH5C,gBAAW,GAAX,WAAW,CAAa;QACxB,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,0BAAqB,GAArB,qBAAqB,CAAuB;QATxD,YAAO,GAAG,KAAK,CAAC;QAChB,cAAS,GAAG,KAAK,CAAC;QAUd,wCAAwC;QACxC,IAAI,IAAI,CAAC,qBAAqB,CAAC,gBAAgB,EAAE;YAC7C,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;SACnC;IACL,CAAC;IAED,QAAQ;QACJ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACpC,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnC,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACtC,CAAC,CAAC;QAEH,yDAAyD;QACzD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;IACxE,CAAC;IAED,oDAAoD;IACpD,IAAI,CAAC,KAAK,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;IAE3C,QAAQ;QACJ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAEtB,+BAA+B;QAC/B,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE;YACxB,OAAO,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC;YAChC,OAAO;SACV;QAED,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC;aACxE,IAAI,CAAC,4DAAK,EAAE,CAAC;aACb,SAAS,CACN,IAAI,CAAC,EAAE;YACH,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;QAC3C,CAAC,EACD,KAAK,CAAC,EAAE;YACJ,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACrB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACzB,CAAC,CAAC,CAAC;IACf,CAAC;;4EArDQ,cAAc;8FAAd,cAAc;QCP3B,yEACI;QAAA,0EAEE;QAF4B,0IAAY,cAAU,IAAC;QAEnD,8EACE;QAAA,kFACE;QAAA,iFAAgB;QAAA,iEAAM;QAAA,4DAAiB;QACzC,4DAAkB;QAClB,sHACE;QAGA,mFACE;QAAA,oFACE;QAAA,sEACA;QAAA,6EACE;QAAA,kGACF;QAAA,4DAAY;QACd,4DAAiB;QAEjB,qFACE;QAAA,uEACA;QAAA,6EACE;QAAA,6FACF;QAAA,4DAAY;QACd,4DAAiB;QACnB,4DAAmB;QACnB,6EAA4D;QAAA,kEAAM;QAAA,4DAAS;QAC/E,4DAAW;QACb,4DAAO;QAEX,4DAAM;;QA7BI,0DAAuB;QAAvB,oFAAuB;QAMd,0DAAoB;QAApB,kFAAoB;;6FDA1B,cAAc;cAD1B,uDAAS;eAAC,EAAE,WAAW,EAAE,sBAAsB,EAAE;;;;;;;;;;;;;;AENlD;AAAA;AAAO,MAAM,QAAQ;CAapB;;;;;;;;;;;;;ACbD;AAAA;AAAO,MAAM,IAAI;CAGhB;;;;;;;;;;;;;ACDD;AAAA;AAAO,MAAM,QAAQ;CAKpB;;;;;;;;;;;;;ACPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACuB;AAGf;AAC5B;AAI+C;;;;;;;;;;;ICGnE,iFACE;IAAA,uDACF;IAAA,4DAAa;;;IAF8C,6EAAgB;IACzE,0DACF;IADE,2FACF;;ADCX,MAAM,oBAAoB;IAQ/B,YAAoB,WAAwB,EAClC,eAAgC,EAChC,eAAgC,EACjC,SAA6C,EACpB,IAAc;QAJ5B,gBAAW,GAAX,WAAW,CAAa;QAClC,oBAAe,GAAf,eAAe,CAAiB;QAChC,oBAAe,GAAf,eAAe,CAAiB;QACjC,cAAS,GAAT,SAAS,CAAoC;QACpB,SAAI,GAAJ,IAAI,CAAU;QAThD,oBAAe,GAAyB,IAAI,CAAC;QAC7C,YAAO,GAAG,KAAK,CAAC;QAChB,gBAAW,GAAG,KAAK,CAAC;IAOgC,CAAC;IAErD,QAAQ;QACN,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACzC,SAAS,EAAE,IAAI,0DAAW,CAAC,IAAI,IAAI,EAAE,CAAC;YACtC,UAAU,EAAE,IAAI,0DAAW,CAAC,IAAI,IAAI,EAAE,CAAC;YACvC,YAAY,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACxC,CAAC,CAAC;QAEH,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,YAAY,CAAC,IAAI,CACjF,gEAAS,CAAC,EAAE,CAAC;QACb,cAAc;QACd,mEAAY,CAAC,GAAG,CAAC;QACjB,sFAAsF;QACtF,gEAAS,CAAC,KAAK,CAAC,EAAE;YAChB,IAAI,KAAK,KAAK,EAAE,EAAE;gBAChB,qBAAqB;gBACrB,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;aAC3B;iBAAM;gBACL,sCAAsC;gBACtC,OAAO,+CAAE,CAAC,IAAI,CAAC,CAAC;aACjB;QACH,CAAC,CAAC,CACH;IAEH,CAAC;IAED,MAAM,CAAC,KAAa;QAClB,OAAO,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC,IAAI;QACxE,mEAAmE;QACnE,0DAAG,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC;QACvB,eAAe;QACf,iEAAU,CAAC,CAAC,CAAC,EAAE;YACb,OAAO,+CAAE,CAAC,IAAI,CAAC,CAAC;QAClB,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED,YAAY,CAAC,iBAAiB;QAC5B,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE;YAE3B,IAAI,CAAC,eAAe,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,SAAS,EAAE,iBAAiB,CAAC,UAAU,EAAE,iBAAiB,CAAC,YAAY,CAAC;iBAC9H,SAAS,CAAC,IAAI,CAAC,EAAE;gBAChB,IAAI,CAAC,WAAW,EAAE,CAAC;YACrB,CAAC,EAAE,KAAK,CAAC,EAAE;gBACT,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACvB,CAAC,CAAC,CAAC;SACN;IACH,CAAC;IAED,WAAW;QACT,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAED,OAAO;QACL,iDAAiD;QACjD,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;IAC1B,CAAC;IAED,aAAa,CAAC,MAAM;QAClB,IAAI,MAAM,EAAE;YACV,OAAO,MAAM,CAAC,IAAI,CAAC;SACpB;QACD,OAAO,EAAE,CAAC;IACZ,CAAC;;wFA5EU,oBAAoB,0lBAYrB,iEAAe;oGAZd,oBAAoB;QCfjC,yEACE;QAAA,0EACE;QADoD,gJAAY,wCAAgC,IAAC;QACjG,yEACM;QAAA,yEACI;QAAA,oFACE;QAAA,sEAMA;QAAA,yFACE;QAAA,8HACE;;QAEJ,4DAAmB;QACrB,4DAAiB;QACrB,4DAAM;QACJ,0EACI;QAAA,kFACI;QAAA,6EAAW;QAAA,uFAAiB;QAAA,4DAAY;QACxC,uEACA;QAAA,wFAAyE;QACzE,uFAA0C;QAC5C,4DAAiB;QACvB,4DAAM;QACN,0EACI;QAAA,kFACE;QAAA,6EAAW;QAAA,+EAAc;QAAA,4DAAY;QACrC,wEACA;QAAA,wFAAyE;QACzE,uFAA0C;QAC5C,4DAAiB;QACrB,4DAAM;QACR,4DAAM;QACN,0EACE;QAAA,2EACI;QAAA,8EAA0F;QAAA,kEAAM;QAAA,4DAAS;QACzG,8EAA2D;QAApB,6IAAS,aAAS,IAAC;QAAC,iEAAK;QAAA,4DAAS;QAC7E,4DAAM;QACR,4DAAM;QACV,4DAAO;QACb,4DAAM;;;;;QAzCE,0DAA0B;QAA1B,uFAA0B;QASX,0DAAwB;QAAxB,iFAAwB;QACiC,0DAA6B;QAA7B,0FAA6B;QAC/E,0DAA8C;QAA9C,yJAA8C;QASxC,0DAAyB;QAAzB,+EAAyB;QACR,0DAAe;QAAf,qEAAe;QAOlC,0DAAyB;QAAzB,+EAAyB;QACR,0DAAe;QAAf,qEAAe;QAOM,0DAAiC;QAAjC,8FAAiC;;6FDtB5F,oBAAoB;cAJhC,uDAAS;eAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,WAAW,EAAE,+BAA+B;aAC7C;;sBAaI,oDAAM;uBAAC,iEAAe;;;;;;;;;;;;;;AE3B3B;AAAA;AAAA;AAAkD;;AAO3C,MAAM,iBAAiB;IAE5B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;kFALU,iBAAiB;iGAAjB,iBAAiB;QCP9B,oEAAG;QAAA,0EAAe;QAAA,4DAAI;;6FDOT,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACiC;AACzB;AACd;AAIsB;;;;AAIpD,MAAM,qBAAqB;IAI9B,YAAoB,IAAgB,EACjB,SAA2B;QAD1B,SAAI,GAAJ,IAAI,CAAY;QACjB,cAAS,GAAT,SAAS,CAAkB;QAC1C,IAAI,CAAC,kBAAkB,GAAG,IAAI,oDAAe,CAAO,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;QACrG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;IAC9D,CAAC;IAED,IAAW,gBAAgB;QACvB,OAAO,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;IAC3D,CAAC;IAEM,eAAe;QAElB,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;QAC3D,IAAI,CAAC,IAAI,EAAE;YACP,OAAO,KAAK,CAAC;SAChB;QACD,MAAM,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC;QAChC,gDAAgD;QAChD,gBAAgB;QAChB,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;IAEjD,CAAC;IAED,KAAK,CAAC,QAAgB,EAAE,QAAgB;QACpC,MAAM,IAAI,GAAG,IAAI,eAAe,EAAE,CAAC;QACnC,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;QAC/B,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;QAC/B,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC;QAEnC,MAAM,OAAO,GAAG,IAAI,gEAAW,CAC3B;YACI,cAAc,EAAE,mCAAmC;YACnD,aAAa,EAAE,gCAAgC;SAClD,CACJ,CAAC;QACF,MAAM,OAAO,GAAG,EAAE,OAAO,EAAE,CAAC;QAE5B;;;;;;;YAOI;QACJ;;sBAEc;QAGd,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,GAAG,wEAAW,CAAC,MAAM,mBAAmB,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAE,OAAO,CAAC;aACzF,IAAI,CAAC,0DAAG,CAAC,IAAI,CAAC,EAAE;YACb,+GAA+G;YAC/G,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC;YAClC,YAAY,CAAC,OAAO,CAAC,aAAa,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;YAC1D,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACnC,OAAO,IAAI,CAAC;QAChB,CAAC,CAAC,CAAC,CAAC;IACZ,CAAC;IAED,MAAM;QACF,iDAAiD;QACjD,YAAY,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;QACvC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACvC,CAAC;;0FApEQ,qBAAqB;wGAArB,qBAAqB,WAArB,qBAAqB,mBADR,MAAM;6FACnB,qBAAqB;cADjC,wDAAU;eAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;;;;;;;;;;;;;ACVlC;AAAA;AAAA;AAAA;AAAA;AAA2C;AAEgB;;;AAKpD,MAAM,eAAe;IACxB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAEzC,MAAM;QACF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAa,GAAG,wEAAW,CAAC,MAAM,qBAAqB,CAAC,CAAC;IACjF,CAAC;IAED,iBAAiB,CAAC,YAAoB;QAClC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAa,GAAG,wEAAW,CAAC,MAAM,iDAAiD,YAAY,EAAE,CAAC,CAAC;IAC3H,CAAC;IAED,SAAS,CAAC,IAAY;QAClB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAa,GAAG,wEAAW,CAAC,MAAM,iCAAiC,IAAI,EAAE,CAAC,CAAC;IACnG,CAAC;;8EAbQ,eAAe;kGAAf,eAAe,WAAf,eAAe,mBADF,MAAM;6FACnB,eAAe;cAD3B,wDAAU;eAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;;;;;;;;;;;;;ACNlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACoB;AACJ;AAEtB;;;AAI9B,MAAM,WAAW;IACpB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAEzC,MAAM;QACF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,GAAG,wEAAW,CAAC,MAAM,aAAa,CAAC,CAAC;IACrE,CAAC;IAED,aAAa,CAAC,QAAgB;QAE1B,MAAM,OAAO,GAAG,IAAI,gEAAW,CAC3B;YACI,cAAc,EAAE,kBAAkB;SACrC,CACJ,CAAC;QACF,MAAM,OAAO,GAAG,EAAE,OAAO,EAAC,CAAC;QAE3B,MAAM,IAAI,GAAS;YACf,IAAI,EAAG,QAAQ;SAClB,CAAC;QAEF,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,GAAG,wEAAW,CAAC,MAAM,kBAAkB,EAAE,IAAI,EAAE,OAAO,CAAC;aAC7E,IAAI,CAAC,0DAAG,CAAC,IAAI,CAAC,EAAE;YACb,OAAO,IAAI,CAAC;QAChB,CAAC,CAAC,CAAC,CAAC;IACZ,CAAC;IAED,UAAU,CAAC,IAAU;QACjB,MAAM,OAAO,GAAG,IAAI,gEAAW,CAC3B;YACI,cAAc,EAAE,kBAAkB;SACrC,CACJ,CAAC;QACF,MAAM,OAAO,GAAG,EAAE,OAAO,EAAC,CAAC;QAE3B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,GAAG,wEAAW,CAAC,MAAM,mBAAmB,GAAG,IAAI,CAAC,EAAE,EAAE,IAAI,EAAE,OAAO,CAAC;aACvF,IAAI,CAAC,0DAAG,CAAC,CAAC,CAAC,EAAE;YACV,OAAO,CAAC,CAAC;QACb,CAAC,CAAC,CAAC,CAAC;IACZ,CAAC;;sEAtCQ,WAAW;8FAAX,WAAW,WAAX,WAAW,mBADE,MAAM;6FACnB,WAAW;cADvB,wDAAU;eAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;;;;;;;;;;;;;ACPlC;AAAA;AAAA;AAAA;AAAA;AAA2C;AAEgB;;;AAKpD,MAAM,WAAW;IACpB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAEzC,MAAM;QACF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,GAAG,wEAAW,CAAC,MAAM,QAAQ,CAAC,CAAC;IAChE,CAAC;;sEALQ,WAAW;8FAAX,WAAW,WAAX,WAAW,mBADE,MAAM;6FACnB,WAAW;cADvB,wDAAU;eAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;;;;;;;;;;;;;ACNlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACoB;AACJ;AACtB;;;AAM9B,MAAM,eAAe;IACxB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAEzC,MAAM;QACF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAa,GAAG,wEAAW,CAAC,MAAM,qBAAqB,CAAC,CAAC;IACjF,CAAC;IAED,iBAAiB,CAAC,YAAoB;QAClC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAa,GAAG,wEAAW,CAAC,MAAM,iDAAiD,YAAY,EAAE,CAAC,CAAC;IAC3H,CAAC;IAED,iBAAiB,CAAC,SAAe,EAAE,UAAgB,EAAE,SAAmB;QAEpE,MAAM,OAAO,GAAG,IAAI,gEAAW,CAC3B;YACI,cAAc,EAAE,kBAAkB;SACrC,CACJ,CAAC;QACF,MAAM,OAAO,GAAG,EAAE,OAAO,EAAE,CAAC;QAE5B,MAAM,IAAI,GAAa;YAEnB,SAAS,EAAE,SAAS;YACpB,UAAU,EAAE,UAAU;YACtB,SAAS,EAAE,SAAS;SACvB,CAAC;QAEF,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,GAAG,wEAAW,CAAC,MAAM,0BAA0B,EAAE,IAAI,EAAE,OAAO,CAAC;aACrF,IAAI,CAAC,0DAAG,CAAC,QAAQ,CAAC,EAAE;YACjB,OAAO,QAAQ,CAAC;QACpB,CAAC,CAAC,CAAC,CAAC;IACZ,CAAC;IAED,UAAU,CAAC,QAAkB;QACzB,MAAM,OAAO,GAAG,IAAI,gEAAW,CAC3B;YACI,cAAc,EAAE,kBAAkB;SACrC,CACJ,CAAC;QACF,MAAM,OAAO,GAAG,EAAE,OAAO,EAAE,CAAC;QAE5B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,GAAG,wEAAW,CAAC,MAAM,2BAA2B,GAAG,QAAQ,CAAC,EAAE,EAAE,QAAQ,EAAE,OAAO,CAAC;aACvG,IAAI,CAAC,0DAAG,CAAC,CAAC,CAAC,EAAE;YACV,OAAO,CAAC,CAAC;QACb,CAAC,CAAC,CAAC,CAAC;IACZ,CAAC;;8EA7CQ,eAAe;kGAAf,eAAe,WAAf,eAAe,mBADF,MAAM;6FACnB,eAAe;cAD3B,wDAAU;eAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;;;;;;;;;;;;;ACRlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACU;AAEF;;;;;;;;ICM1D,4EACI;IAAA,yFACF;IAAA,4DAAY;;ADDf,MAAM,mBAAmB;IAO9B,YAAoB,WAAwB,EACxB,WAAwB,EACzB,SAA4C,EACnB,IAAU;QAHlC,gBAAW,GAAX,WAAW,CAAa;QACxB,gBAAW,GAAX,WAAW,CAAa;QACzB,cAAS,GAAT,SAAS,CAAmC;QACnB,SAAI,GAAJ,IAAI,CAAM;QAPtD,YAAO,GAAG,KAAK,CAAC;QAChB,gBAAW,GAAG,KAAK,CAAC;IAMsC,CAAC;IAE3D,QAAQ;QACN,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACrC,IAAI,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAChC,CAAC,CAAC;QACH,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC;QAC9B,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACvC,CAAC;IAED,oDAAoD;IACpD,IAAI,CAAC,KAAK,OAAO,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;IAE1C,QAAQ;QAEN,+BAA+B;QAC/B,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE;YACvB,OAAO,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC;YAChC,OAAO;SACV;QAED,IAAG,IAAI,CAAC,YAAY,IAAI,IAAI,EAAC;YAC3B,IAAI,CAAC,QAAQ,EAAE,CAAC;YAChB,OAAO;SACR;QAED,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC;aAC1C,SAAS,CACN,IAAI,CAAC,EAAE;QACP,CAAC,EACD,KAAK,CAAC,EAAE;YACJ,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACrB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACzB,CAAC,CAAC,CAAC;IACf,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,YAAY,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC;QAC3C,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC;aAC7C,SAAS,CACN,IAAI,CAAC,EAAE;YACL,IAAI,CAAC,WAAW,EAAE,CAAC;QACrB,CAAC,EACD,KAAK,CAAC,EAAE;YACJ,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACrB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACzB,CAAC,CAAC,CAAC;IACT,CAAC;IAED,WAAW;QACT,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAED,OAAO;QACL,iDAAiD;QACjD,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;IACtB,CAAC;;sFArEU,mBAAmB,qcAUV,iEAAe;mGAVxB,mBAAmB;QCVhC,yEACI;QAAA,yEACE;QAAA,4EACE;QADsB,2IAAS,iBAAa,IAAC;QAC7C,2EAAU;QAAA,gEAAK;QAAA,4DAAW;QAC5B,4DAAS;QACX,4DAAM;QACV,4DAAM;QACN,yEACI;QAAA,0EACI;QAAA,2HACI;QAEJ,iFACI;QAAA,sEACA;QAAA,6EAAW;QAAA,oFAAwB;QAAA,4DAAY;QACjD,4DAAiB;QACjB,0EACE;QAAA,6EAA2G;QAArB,4IAAS,cAAU,IAAC;QAAC,kEAAM;QAAA,4DAAS;QAC1H,6EAA2D;QAApB,4IAAS,aAAS,IAAC;QAAC,iEAAK;QAAA,4DAAS;QAC3E,4DAAM;QACZ,4DAAO;QACX,4DAAM;;QAbI,0DAAsB;QAAtB,mFAAsB;QACb,0DAAmB;QAAnB,iFAAmB;QAQ8B,0DAA6B;QAA7B,0FAA6B;;6FDPpF,mBAAmB;cAJ/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,WAAW,EAAE,8BAA8B;aAC5C;;sBAWc,oDAAM;uBAAC,iEAAe;;;;;;;;;;;;;;AEpBrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAEyB;;;;;;;ICEnE,kFAAoC;IAAA,+DAAG;IAAA,4DAAkB;;;;IACzD,2EACI;IAAA,uEAA0E;IAAxC,0XAAuC;IAAC,uDAAc;IAAA,4DAAI;IAChG,4DAAW;;;IADmE,0DAAc;IAAd,+EAAc;;;IAK5F,kFAAoC;IAAA,iEAAK;IAAA,4DAAkB;;;IAC3D,2EAAqC;IAAA,uDAAiB;IAAA,4DAAW;;;IAA5B,0DAAiB;IAAjB,4FAAiB;;;IAG1D,4EAAqE;;;IACrE,qEAAoE;;;IAfxE,+EAEI;IAAA,2EACI;IAAA,6IAAoC;IACpC,+HACI;IAER,qEAAe;IAEf,2EACI;IAAA,6IAAoC;IACpC,+HAAqC;IACzC,qEAAe;IAEf,2IAAoD;IACpD,6HAA0D;IAC5D,4DAAY;;;IAhBgB,0FAAyB;IAcnC,0DAAmC;IAAnC,qGAAmC;IAC1C,0DAAgD;IAAhD,sGAAgD;;ADNtD,MAAM,aAAa;IAExB,YAAoB,WAAwB,EAAS,MAAiB;QAAlD,gBAAW,GAAX,WAAW,CAAa;QAAS,WAAM,GAAN,MAAM,CAAW;QAEtE,qBAAgB,GAAa,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QAC5C,eAAU,GAAG,EAAE,CAAC;IAH0D,CAAC;IAK3E,QAAQ;QACN,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE;aACxB,SAAS,CACN,IAAI,CAAC,EAAE;YACH,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QAC3B,CAAC,EACD,KAAK,CAAC,EAAE;YACJ,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACzB,CAAC,CAAC,CAAC;IACT,CAAC;IAED,iBAAiB;QACf,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,sFAAmB,EAAE;YACtD,KAAK,EAAE,OAAO;SACf,CAAC,CAAC;IACL,CAAC;IAED,oBAAoB,CAAC,IAAU;QAC7B,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,sFAAmB,EAAE;YACtD,KAAK,EAAE,OAAO;YACd,IAAI,EAAE,IAAI;SACX,CAAC,CAAC;IACL,CAAC;;0EA7BU,aAAa;6FAAb,aAAa;QCV1B,4EAAwE;QAA9B,qIAAS,uBAAmB,IAAC;QAAC,mEAAQ;QAAA,4DAAS;QACzF,qHAEI;;QAFO,0DAAkB;QAAlB,gFAAkB;;6FDShB,aAAa;cAJzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;aACrC;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqE;AAGxB;AAGiC;;;;;;;;;;;ICAtE,gFACE;IAAA,uDACF;IAAA,4DAAa;;;IAF8C,6EAAgB;IACzE,0DACF;IADE,sFACF;;;IAcF,kFAAoC;IAAA,+DAAG;IAAA,4DAAkB;;;;IACzD,2EACE;IAAA,wEAA8E;IAA5C,mYAA2C;IAAC,uDAAc;IAAA,4DAAI;IAClG,4DAAW;;;IADqE,0DAAc;IAAd,+EAAc;;;IAK9F,kFAAoC;IAAA,uEAAW;IAAA,4DAAkB;;;IACjE,2EAAqC;IAAA,uDAA6B;;IAAA,4DAAW;;;IAAxC,0DAA6B;IAA7B,kKAA6B;;;IAIlE,kFAAoC;IAAA,wEAAY;IAAA,4DAAkB;;;IAClE,2EAAqC;IAAA,uDAA8B;;IAAA,4DAAW;;;IAAzC,0DAA8B;IAA9B,mKAA8B;;;IAGrE,4EAAqE;;;IACrE,qEAAoE;;;IApBtE,gFAEE;IAAA,4EACE;IAAA,mJAAoC;IACpC,qIACE;IAEJ,qEAAe;IAEf,4EACE;IAAA,mJAAoC;IACpC,qIAAqC;IACvC,qEAAe;IAEf,4EACE;IAAA,mJAAoC;IACpC,qIAAqC;IACvC,qEAAe;IAEf,mJAAoD;IACpD,qIAA0D;IAC5D,4DAAY;;;IArB6B,0FAAyB;IAmBhD,2DAAmC;IAAnC,qGAAmC;IAC1C,0DAAgD;IAAhD,sGAAgD;;AD1BtD,MAAM,iBAAiB;IAE5B,YAAoB,eAAgC,EAChC,cAA+B,EAChC,MAAiB,EAChB,kBAAqC;QAHrC,oBAAe,GAAf,eAAe,CAAiB;QAChC,mBAAc,GAAd,cAAc,CAAiB;QAChC,WAAM,GAAN,MAAM,CAAW;QAChB,uBAAkB,GAAlB,kBAAkB,CAAmB;QAEzD,qBAAgB,GAAa,CAAC,IAAI,EAAE,WAAW,EAAE,YAAY,CAAC,CAAC;QAC/D,eAAU,GAAG,EAAE,CAAC;QAChB,gBAAW,GAAG,IAAI,0DAAW,EAAE,CAAC;IAJ6B,CAAC;IAO9D,QAAQ;IACR,CAAC;IAED,4BAA4B;QAC1B,IAAI,CAAC,eAAe,CAAC,iBAAiB,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;aAC7D,SAAS,CACR,IAAI,CAAC,EAAE;YACH,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,kBAAkB,CAAC,aAAa,EAAE,CAAC;QAC5C,CAAC,EACD,KAAK,CAAC,EAAE;YACJ,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACrB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;YACrB,IAAI,CAAC,kBAAkB,CAAC,aAAa,EAAE,CAAC;QAC5C,CAAC,CAAC,CAAC;IACP,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE;aAC5B,SAAS,CACN,IAAI,CAAC,EAAE;YACH,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,kBAAkB,CAAC,aAAa,EAAE,CAAC;QAC5C,CAAC,EACD,KAAK,CAAC,EAAE;YACJ,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACrB,IAAI,CAAC,kBAAkB,CAAC,aAAa,EAAE,CAAC;QAC5C,CAAC,CAAC,CAAC;IACT,CAAC;IAED,eAAe;QACb,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;aAC5D,SAAS,CACR,IAAI,CAAC,EAAE;YACH,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QAC3B,CAAC,EACD,KAAK,CAAC,EAAE;YACJ,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACzB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,qBAAqB;QACnB,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,yFAAoB,EAAE;YACvD,KAAK,EAAE,OAAO;SACf,CAAC,CAAC;IACL,CAAC;IAED,wBAAwB,CAAC,QAAkB;IAE3C,CAAC;;kFA7DU,iBAAiB;iGAAjB,iBAAiB;QCZ5B,yEACE;QAAA,oFACE;QAAA,sEAEA;QAAA,yFACE;QAAA,2HACE;;QAEJ,4DAAmB;QACrB,4DAAiB;QAEnB,4DAAM;QACN,yEACE;QAAA,4EAAmE;QAAzC,yIAAS,kCAA8B,IAAC;QAAC,iEAAM;QAAA,4DAAS;QAClF,6EAA4D;QAAlC,0IAAS,2BAAuB,IAAC;QAAC,wEAAY;QAAA,4DAAS;QACnF,4DAAM;QAER,0EACE;QAAA,4HAEE;QAoBJ,4DAAM;;;QArCE,0DAA2B;QAA3B,wFAA2B;QAEf,0DAA8C;QAA9C,yJAA8C;QAarD,0DAA6B;QAA7B,2FAA6B;;6FDN7B,iBAAiB;cAJ7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;aACzC;;;;;;;;;;;;;;AEZD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,MAAM,EAAE,2BAA2B;CACpC,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;AChBnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkB;AAC6B;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport {\n   MatButtonModule,\n   MatToolbarModule,\n   MatIconModule,\n   MatBadgeModule,\n   MatSidenavModule,\n   MatListModule,\n   MatGridListModule,\n   MatFormFieldModule,\n   MatInputModule,\n   MatSelectModule,\n   MatRadioModule,\n   MatDatepickerModule,\n   MatNativeDateModule,\n   MatChipsModule,\n   MatTooltipModule,\n   MatTableModule,\n   MatPaginatorModule,\n   MatCardModule,\n   MatAutocompleteModule\n} from '@angular/material';\n\n@NgModule({\n   imports: [\n      CommonModule,\n      MatAutocompleteModule,\n      MatButtonModule,\n      MatToolbarModule,\n      MatIconModule,\n      MatSidenavModule,\n      MatBadgeModule,\n      MatListModule,\n      MatGridListModule,\n      MatFormFieldModule,\n      MatInputModule,\n      MatSelectModule,\n      MatRadioModule,\n      MatDatepickerModule,\n      MatNativeDateModule,\n      MatChipsModule,\n      MatTooltipModule,\n      MatTableModule,\n      MatPaginatorModule,\n      MatCardModule,\n   ],\n   exports: [\n      MatAutocompleteModule,\n      MatButtonModule,\n      MatToolbarModule,\n      MatIconModule,\n      MatSidenavModule,\n      MatBadgeModule,\n      MatListModule,\n      MatGridListModule,\n      MatInputModule,\n      MatFormFieldModule,\n      MatSelectModule,\n      MatRadioModule,\n      MatDatepickerModule,\n      MatChipsModule,\n      MatTooltipModule,\n      MatTableModule,\n      MatPaginatorModule,\n      MatCardModule\n   ],\n   providers: [\n      MatDatepickerModule,\n   ]\n})\n\nexport class AngularMaterialModule { }","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { HomeComponent } from './home/home.component';\nimport { AuthGuard } from './helpers/auth.guard';\nimport { EmployeeComponent } from './employee/employee.component';\nimport { VacationComponent } from './vacation/vacation.component';\nimport { RegisterComponent } from './register/register.component';\nimport { TeamComponent } from './team/team.component';\n\n\nconst routes: Routes = [\n  { path: 'home', component: HomeComponent, canActivate: [AuthGuard] },\n  { path: 'employee', component: EmployeeComponent, canActivate: [AuthGuard] },\n  { path: 'team', component: TeamComponent, canActivate: [AuthGuard] },\n  { path: 'vacation', component: VacationComponent, canActivate: [AuthGuard] },\n  { path: 'register', component: RegisterComponent, canActivate: [AuthGuard] },\n  { path: '', component: LoginComponent },\n  { path: '**', redirectTo: '' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'register';\n}\n","  <div class=\"wrapper\">\r\n    <app-header></app-header>\r\n    <div class=\"content-wrapper\">\r\n      <div class=\"app-container pb-2 pt-2 pl-4 pr-4 container\">\r\n\r\n        <router-outlet></router-outlet>\r\n\r\n      </div>\r\n    </div>\r\n\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { HomeComponent } from './home/home.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AngularMaterialModule } from './angular.material.module';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { JwtInterceptor } from './helpers/jwt.interceptor';\nimport { EmployeeComponent } from './employee/employee.component';\nimport { VacationComponent } from './vacation/vacation.component';\nimport { RegisterComponent } from './register/register.component';\nimport { TeamComponent } from './team/team.component';\nimport { TeamDialogComponent } from './team-dialog/team-dialog.component';\nimport { HeaderComponent } from './header/header.component';\nimport { NewVacationComponent } from './new-vacation/new-vacation.component';\nimport { JWT_OPTIONS, JwtHelperService } from '@auth0/angular-jwt';\nimport { EditEmployeeComponent } from './edit-employee/edit-employee.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    LoginComponent,\n    EmployeeComponent,\n    VacationComponent,\n    RegisterComponent,\n    TeamComponent,\n    TeamDialogComponent,\n    HeaderComponent,\n    NewVacationComponent,\n    EditEmployeeComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    AngularMaterialModule,\n    FlexLayoutModule,\n    HttpClientModule,\n  ],\n  exports: [\n    FlexLayoutModule\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\n    { provide: JWT_OPTIONS, useValue: JWT_OPTIONS },\n        JwtHelperService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { EmployeeService } from '../services/employee.service';\nimport { Employee } from '../models/employee';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\n\n@Component({\n  selector: 'app-edit-employee',\n  templateUrl: './edit-employee.component.html',\n  styleUrls: ['./edit-employee.component.scss']\n})\nexport class EditEmployeeComponent implements OnInit {\n\n  constructor(private formBuilder: FormBuilder,\n              private employeeService: EmployeeService,\n              public dialogRef: MatDialogRef<EditEmployeeComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: Employee) { }\n\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>edit-employee works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { EmployeeService } from '../services/employee.service';\nimport { EditEmployeeComponent } from '../edit-employee/edit-employee.component';\nimport { MatDialog } from '@angular/material';\n\n@Component({\n  selector: 'app-employee',\n  templateUrl: './employee.component.html'\n})\nexport class EmployeeComponent implements OnInit {\n\n  constructor(private employeeService: EmployeeService,\n              public dialog: MatDialog) { }\n\n  // tslint:disable-next-line: max-line-length\n  displayedColumns: string[] = ['name', 'dateBirth', 'street', 'number', 'complement', 'neighborhood', 'city', 'state', 'contractDate', 'registration'];\n  dataSource = [];\n\n  ngOnInit(): void {\n    this.employeeService.getAll()\n      .subscribe(\n        data => {\n          this.dataSource = data;\n        },\n        error => {\n          console.error(error);\n        });\n  }\n\n  showNewEmployeeDialog(): void {\n    const dialogRef = this.dialog.open(EditEmployeeComponent, {\n      width: '750px'\n    });\n  }\n\n}\n","<mat-table *ngIf=\"dataSource\" [dataSource]=\"dataSource\">\n\n    <ng-container matColumnDef=\"name\">\n        <mat-header-cell *matHeaderCellDef> Name </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\"> {{element.name}} </mat-cell>\n    </ng-container>\n  \n    <ng-container matColumnDef=\"dateBirth\">\n        <mat-header-cell *matHeaderCellDef> Date Birth </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\"> {{element.dateBirth}} </mat-cell>\n    </ng-container>\n  \n    <ng-container matColumnDef=\"street\">\n        <mat-header-cell *matHeaderCellDef> Street </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\"> {{element.street}} </mat-cell>\n    </ng-container>\n  \n    <ng-container matColumnDef=\"number\">\n        <mat-header-cell *matHeaderCellDef> Number </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\"> {{element.number}} </mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"complement\">\n        <mat-header-cell *matHeaderCellDef> Complement </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\"> {{element.complement}} </mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"neighborhood\">\n        <mat-header-cell *matHeaderCellDef> Neighborhood </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\"> {{element.neighborhood}} </mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"city\">\n        <mat-header-cell *matHeaderCellDef> City </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\"> {{element.city}} </mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"state\">\n        <mat-header-cell *matHeaderCellDef> State </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\"> {{element.state}} </mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"contractDate\">\n        <mat-header-cell *matHeaderCellDef> Contract Date </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\"> {{element.contractDate}} </mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"registration\">\n        <mat-header-cell *matHeaderCellDef> Registration </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\"> {{element.registration}} </mat-cell>\n    </ng-container>\n  \n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n    <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\n  </mat-table>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html'\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- Toolbar -->\n<mat-toolbar color=\"primary\" class=\"app-header\">\n    <nav active-menu>\n        <ul class=\"nav nav-pills pull-right\">\n          <li><a class=\"nav-link color-link-nav\" routerLink=\"home\" routerLinkActive=\"active\">Home<span class=\"sr-only\">(current)</span></a></li>\n          <li><a class=\"nav-link color-link-nav\" routerLink=\"employee\" routerLinkActive=\"active\">Employee</a></li>\n          <li><a class=\"nav-link color-link-nav\" routerLink=\"team\" routerLinkActive=\"active\">Team</a></li>\n          <li><a class=\"nav-link color-link-nav\" routerLink=\"vacation\" routerLinkActive=\"active\">Vacation</a></li>\n          <li><a class=\"nav-link color-link-nav\" routerLink=\"register\" routerLinkActive=\"active\">Register</a></li>\n        </ul>\n      </nav>\n</mat-toolbar>","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { AuthenticationService } from '../services/authentication.service';\r\n\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthGuard implements CanActivate {\r\n    constructor(\r\n        private router: Router,\r\n        private authenticationService: AuthenticationService\r\n    ) { }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        if (!this.authenticationService.isAuthenticated()) {\r\n            // authorised so return true\r\n            this.router.navigate(['']);\r\n            return false;\r\n        }\r\n\r\n        // not logged in so redirect to login page with the return url\r\n        return true;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthenticationService } from '../services/authentication.service';\r\n\r\n\r\n@Injectable()\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n    constructor(private authenticationService: AuthenticationService) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        // add authorization header with jwt token if available\r\n        let currentUser = this.authenticationService.currentUserValue;\r\n        if (currentUser && currentUser.authdata) {\r\n            request = request.clone({\r\n                setHeaders: {\r\n                    Authorization: `${currentUser.authdata}`\r\n                }\r\n            });\r\n        } \r\n        /*else{\r\n          request = request.clone({\r\n                setHeaders: {\r\n                    'Content-Type': 'application/x-www-form-urlencoded',\r\n                    Authorization: `Basic Y2xpZW50YXBwOjEyMzQ1Ng==`\r\n                }\r\n            });\r\n        }*/\r\n\r\n        return next.handle(request);\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { first } from 'rxjs/operators';\r\nimport { User } from '../models/user';\r\nimport { AuthenticationService } from '../services/authentication.service';\r\nimport { UserService } from '../services/user.service';\r\n\r\n@Component({ templateUrl: 'home.component.html' })\r\nexport class HomeComponent implements OnInit {\r\ncurrentUser: User;\r\nusers = [];\r\n\r\nconstructor(\r\n        private authenticationService: AuthenticationService,\r\n        private userService: UserService\r\n    ) {\r\n        this.currentUser = this.authenticationService.currentUserValue;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.loadAllUsers();\r\n    }\r\n\r\n    private loadAllUsers() {\r\n        /*this.userService.getAll()\r\n            .pipe(first())\r\n            .subscribe(users => this.users = users);*/\r\n    }\r\n}\r\n","\r\n<h1>Hi Fulano!</h1>\r\n<p>You're logged in with Angular 9!!</p>\r\n<h3>All registered users:</h3>\r\n<!--ul>\r\n  <li *ngFor=\"let user of users\">\r\n    {{user.username}} ({{user.firstName}} {{user.lastName}})\r\n    - <a (click)=\"deleteUser(user.id)\" class=\"text-danger\">Delete</a>\r\n  </li>\r\n</ul-->\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { first } from 'rxjs/operators';\r\nimport { AuthenticationService } from '../services/authentication.service';\r\n\r\n@Component({ templateUrl: 'login.component.html' })\r\nexport class LoginComponent implements OnInit {\r\n    loginForm: FormGroup;\r\n    loading = false;\r\n    submitted = false;\r\n    loginInvalid: boolean;\r\n    returnUrl: string;\r\n\r\n    constructor(\r\n        private formBuilder: FormBuilder,\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        private authenticationService: AuthenticationService\r\n    ) {\r\n        // redirect to home if already logged in\r\n        if (this.authenticationService.currentUserValue) {\r\n            this.router.navigate(['/home']);\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.loginForm = this.formBuilder.group({\r\n            username: ['', Validators.required],\r\n            password: ['', Validators.required]\r\n        });\r\n\r\n        // get return url from route parameters or default to '/'\r\n        this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '';\r\n    }\r\n\r\n    // convenience getter for easy access to form fields\r\n    get f() { return this.loginForm.controls; }\r\n\r\n    onSubmit() {\r\n        this.submitted = true;\r\n\r\n        // stop here if form is invalid\r\n        if (this.loginForm.invalid) {\r\n            console.error('Login inválido');\r\n            return;\r\n        }\r\n\r\n        this.loading = true;\r\n       this.authenticationService.login(this.f.username.value, this.f.password.value)\r\n            .pipe(first())\r\n            .subscribe(\r\n                data => {\r\n                    this.router.navigate([this.returnUrl]);\r\n                },\r\n                error => {\r\n                    console.error(error);\r\n                    this.loginInvalid = true;\r\n                    this.loading = false;\r\n                });\r\n    }\r\n}\r\n","<div class=\"login-wrapper\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n    <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\r\n\r\n      <mat-card class=\"box\">\r\n        <mat-card-header>\r\n          <mat-card-title>Log in</mat-card-title>\r\n        </mat-card-header>\r\n        <mat-error *ngIf=\"loginInvalid\">\r\n          The username and password were not recognised\r\n        </mat-error>\r\n    \r\n          <mat-card-content>\r\n            <mat-form-field class=\"example-full-width\">\r\n              <input matInput placeholder=\"Username\" formControlName=\"username\" required>\r\n              <mat-error>\r\n                Please provide a valid email address\r\n              </mat-error>\r\n            </mat-form-field>            \r\n    \r\n            <mat-form-field class=\"example-full-width\">\r\n              <input matInput placeholder=\"Password\" formControlName=\"password\" required>\r\n              <mat-error>\r\n                Please provide a valid password\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </mat-card-content>\r\n          <button mat-stroked-button color=\"accent\" class=\"btn-block\">Log in</button>        \r\n      </mat-card>\r\n    </form>\r\n  \r\n</div>","export class Employee{\r\n    id?: number;\r\n    name: string;\r\n    dateBirth: Date;\r\n    street: string;\r\n    number: string;\r\n    complement: string;\r\n    neighborhood: string;\r\n    city: string;\r\n    state: string;\r\n    contractDate: Date;\r\n    registration: string;\r\n    iamgeUrl: string;\r\n}","export class Team{\r\n    id?: number;\r\n    name: string;\r\n}","import { Employee } from './employee';\r\n\r\nexport class Vacation{\r\n    id?: number;\r\n    startDate: Date;\r\n    finishDate: Date;\r\n    employees?: Employee;\r\n}","import { Component, OnInit, Inject } from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\nimport { VacationService } from '../services/vacation.service';\nimport { Vacation } from '../models/vacation';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { Observable, of } from 'rxjs';\nimport { Employee } from '../models/employee';\nimport { EmployeeComponent } from '../employee/employee.component';\nimport { EmployeeService } from '../services/employee.service';\nimport { startWith, debounceTime, switchMap, map, catchError } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-new-vacation',\n  templateUrl: './new-vacation.component.html'\n})\nexport class NewVacationComponent implements OnInit {\n\n  vacationForm: FormGroup;\n  employeeOptions: Observable<Employee> = null;\n  loading = false;\n  teamInvalid = false;\n  teamToUpdate: Vacation;\n\n  constructor(private formBuilder: FormBuilder,\n    private vacationService: VacationService,\n    private employeeService: EmployeeService,\n    public dialogRef: MatDialogRef<NewVacationComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: Vacation) { }\n\n  ngOnInit(): void {\n    this.vacationForm = this.formBuilder.group({\n      startDate: new FormControl(new Date()),\n      finishDate: new FormControl(new Date()),\n      autoComplete: ['', Validators.required]\n    });\n\n    this.employeeOptions = this.vacationForm.controls['autoComplete'].valueChanges.pipe(\n      startWith(''),\n      // delay emits\n      debounceTime(300),\n      // use switch map so as to cancel previous subscribed events, before creating new once\n      switchMap(value => {\n        if (value !== '') {\n          // lookup from github\n          return this.lookup(value);\n        } else {\n          // if no value is present, return null\n          return of(null);\n        }\n      })\n    )\n\n  }\n\n  lookup(value: string): Observable<Employee[]> {\n    return this.employeeService.getByName(value.toString().toLowerCase()).pipe(\n      // map the item property of the github results as our return object\n      map(results => results),\n      // catch errors\n      catchError(_ => {\n        return of(null);\n      })\n    );\n  }\n\n  saveVacation(vacationFormValue) {\n    if (this.vacationForm.valid) {\n\n      this.vacationService.createNewVacation(vacationFormValue.startDate, vacationFormValue.finishDate, vacationFormValue.autoComplete)\n        .subscribe(data => {\n          this.closeDialog();\n        }, error => {\n          console.error(error);\n        });\n    }\n  }\n\n  closeDialog() {\n    this.dialogRef.close();\n  }\n\n  onClear() {\n    // tslint:disable-next-line: no-unused-expression\n    this.vacationForm.reset;\n  }\n\n  getOptionText(option) {\n    if (option) {\n      return option.name;\n    }\n    return '';\n  }\n\n}\n","<div fxLayout=\"row\" fxLayoutAlign=\"start center\" >\n  <form [formGroup]=\"vacationForm\" class=\"example-form\" (ngSubmit)=\"saveVacation(vacationForm.value)\">\n    <div fxLayout=\"row\" >\n          <div class=\"col-4\">\n              <mat-form-field class=\"example-full-width\">\n                <input type=\"text\"\n                       placeholder=\"Enter a employee name\"\n                       aria-label=\"Number\"\n                       matInput\n                       formControlName=\"autoComplete\"\n                       [matAutocomplete]=\"auto\">\n                <mat-autocomplete autoActiveFirstOption #auto=\"matAutocomplete\" [displayWith]=\"getOptionText\">\n                  <mat-option *ngFor=\"let option of employeeOptions | async\" [value]=\"option\">\n                    {{option.name}}\n                  </mat-option>\n                </mat-autocomplete>\n              </mat-form-field>\n          </div>\n            <div class=\"col-4\">\n                <mat-form-field>\n                    <mat-label>Início das Férias</mat-label>\n                    <input matInput [matDatepicker]=\"picker1\" formControlName=\"startDate\">\n                    <mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\n                    <mat-datepicker #picker1></mat-datepicker>\n                  </mat-form-field>\n            </div>\n            <div class=\"col-4\">\n                <mat-form-field>\n                  <mat-label>Fim das Férias</mat-label>\n                  <input matInput [matDatepicker]=\"picker2\" formControlName=\"finishDate\">\n                  <mat-datepicker-toggle matSuffix [for]=\"picker2\"></mat-datepicker-toggle>\n                  <mat-datepicker #picker2></mat-datepicker>\n                </mat-form-field>\n            </div>\n          </div>\n          <div fxLayout=\"row\" >\n            <div div fxLayout=\"row\" fxLayoutAlign=\"end center\"  >\n                <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"vacationForm.invalid\">Submit</button>\n                <button mat-raised-button color=\"warn\" (click)=\"onClear()\">Clear</button>\n            </div>\n          </div>\n      </form>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>register works!</p>\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHandler, HttpHeaders } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\n\r\n\r\nimport { environment } from 'src/environments/environment';\r\nimport { User } from '../models/user';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthenticationService {\r\n    private currentUserSubject: BehaviorSubject<User>;\r\n    public currentUser: Observable<User>;\r\n\r\n    constructor(private http: HttpClient,\r\n                public jwtHelper: JwtHelperService) {\r\n        this.currentUserSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('currentUser')));\r\n        this.currentUser = this.currentUserSubject.asObservable();\r\n    }\r\n\r\n    public get currentUserValue(): User {\r\n        return JSON.parse(localStorage.getItem('currentUser'));\r\n    }\r\n\r\n    public isAuthenticated(): boolean {\r\n\r\n        let user = JSON.parse(localStorage.getItem('currentUser'));\r\n        if (!user) {\r\n            return false;\r\n        }\r\n        const token = user.access_token;\r\n        // Check whether the token is expired and return\r\n        // true or false\r\n        return !this.jwtHelper.isTokenExpired(token);\r\n\r\n    }\r\n\r\n    login(username: string, password: string) {\r\n        const body = new URLSearchParams();\r\n        body.set('username', username);\r\n        body.set('password', password);\r\n        body.set('grant_type', 'password');\r\n\r\n        const headers = new HttpHeaders(\r\n            {\r\n                'Content-Type': 'application/x-www-form-urlencoded',\r\n                Authorization: `Basic Y2xpZW50YXBwOjEyMzQ1Ng==`\r\n            }\r\n        );\r\n        const options = { headers };\r\n\r\n        /*const user = {\r\n            id: 1,\r\n            username:  'Test',\r\n            password:  '123456',\r\n            firstName :  'test',\r\n            lastName :  'test',\r\n            authdata : 'Bearer lklçadhofda'\r\n        };*/\r\n        /*localStorage.setItem('currentUser', JSON.stringify(user));\r\n        this.currentUserSubject.next(user);\r\n        return user;*/\r\n\r\n\r\n        return this.http.post<any>(`${environment.apiUrl}/auth/oauth/token`, body.toString(), options)\r\n            .pipe(map(user => {\r\n                // store user details and basic auth credentials in local storage to keep user logged in between page refreshes\r\n                user.authdata = user.access_token;\r\n                localStorage.setItem('currentUser', JSON.stringify(user));\r\n                this.currentUserSubject.next(user);\r\n                return user;\r\n            }));\r\n    }\r\n\r\n    logout() {\r\n        // remove user from local storage to log user out\r\n        localStorage.removeItem('currentUser');\r\n        this.currentUserSubject.next(null);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Employee } from '../models/employee';\r\n\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class EmployeeService {\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getAll() {\r\n        return this.http.get<Employee[]>(`${environment.apiUrl}/employee/employees`);\r\n    }\r\n\r\n    getByRegistration(registration: string) {\r\n        return this.http.get<Employee[]>(`${environment.apiUrl}/employee/employeeByRegistration?registration=${registration}`);\r\n    }\r\n\r\n    getByName(name: string) {\r\n        return this.http.get<Employee[]>(`${environment.apiUrl}/employee/employeeByName?name=${name}`);\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Team } from '../models/team';\r\nimport { map } from 'rxjs/operators';\r\n\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class TeamService {\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getAll() {\r\n        return this.http.get<Team[]>(`${environment.apiUrl}/team/teams`);\r\n    }\r\n\r\n    createNewTeam(teamName: string) {\r\n\r\n        const headers = new HttpHeaders(\r\n            {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        );\r\n        const options = { headers};\r\n\r\n        const body: Team = {\r\n            name : teamName\r\n        };\r\n\r\n        return this.http.post<any>(`${environment.apiUrl}/team/createTeam`, body, options)\r\n            .pipe(map(team => {\r\n                return team;\r\n            }));\r\n    }\r\n\r\n    updateTeam(team: Team) {\r\n        const headers = new HttpHeaders(\r\n            {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        );\r\n        const options = { headers};\r\n\r\n        return this.http.put<any>(`${environment.apiUrl}/team/updateTeam/` + team.id, team, options)\r\n            .pipe(map(t => {\r\n                return t;\r\n            }));\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { User } from '../models/user';\r\n\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class UserService {\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getAll() {\r\n        return this.http.get<User[]>(`${environment.apiUrl}/users`);\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { map } from 'rxjs/operators';\r\nimport { Vacation } from '../models/vacation';\r\nimport { Employee } from '../models/employee';\r\n\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class VacationService {\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getAll() {\r\n        return this.http.get<Vacation[]>(`${environment.apiUrl}/vacation/vacations`);\r\n    }\r\n\r\n    getByRegistration(registration: string){\r\n        return this.http.get<Vacation[]>(`${environment.apiUrl}/vacation/vacationByRegistration?registration=${registration}`);\r\n    }\r\n\r\n    createNewVacation(startDate: Date, finishDate: Date, employees: Employee) {\r\n\r\n        const headers = new HttpHeaders(\r\n            {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        );\r\n        const options = { headers };\r\n\r\n        const body: Vacation = {\r\n\r\n            startDate: startDate,\r\n            finishDate: finishDate,\r\n            employees: employees\r\n        };\r\n\r\n        return this.http.post<any>(`${environment.apiUrl}/vacation/createVacation`, body, options)\r\n            .pipe(map(vacation => {\r\n                return vacation;\r\n            }));\r\n    }\r\n\r\n    updateTeam(vacation: Vacation) {\r\n        const headers = new HttpHeaders(\r\n            {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        );\r\n        const options = { headers };\r\n\r\n        return this.http.put<any>(`${environment.apiUrl}/vacation/updateVacation/` + vacation.id, vacation, options)\r\n            .pipe(map(t => {\r\n                return t;\r\n            }));\r\n    }\r\n}","import { Component, OnInit, Inject } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { TeamService } from '../services/team.service';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { Team } from '../models/team';\n\n@Component({\n  selector: 'app-team-dialog',\n  templateUrl: './team-dialog.component.html'\n})\nexport class TeamDialogComponent implements OnInit {\n\n  teamForm: FormGroup;\n  loading = false;\n  teamInvalid = false;\n  teamToUpdate: Team;\n\n  constructor(private formBuilder: FormBuilder,\n              private teamService: TeamService,\n              public dialogRef: MatDialogRef<TeamDialogComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: Team) { }\n\n  ngOnInit(): void {\n    this.teamForm = this.formBuilder.group({\n      name: ['', Validators.required]\n    });\n    this.teamToUpdate = this.data;\n    this.f.name.setValue(this.data.name);\n  }\n\n  // convenience getter for easy access to form fields\n  get f() { return this.teamForm.controls; }\n\n  onSubmit() {\n\n    // stop here if form is invalid\n    if (this.teamForm.invalid) {\n        console.error('Login inválido');\n        return;\n    }\n\n    if(this.teamToUpdate != null){\n      this.onUpdate();\n      return;\n    }\n\n    this.loading = true;\n    this.teamService.createNewTeam(this.f.name.value)\n          .subscribe(\n              data => {\n              },\n              error => {\n                  console.error(error);\n                  this.teamInvalid = true;\n                  this.loading = false;\n              });\n  }\n\n  onUpdate() {\n    this.teamToUpdate.name = this.f.name.value;\n    this.teamService.updateTeam(this.teamToUpdate)\n    .subscribe(\n        data => {\n          this.closeDialog();\n        },\n        error => {\n            console.error(error);\n            this.teamInvalid = true;\n            this.loading = false;\n        });\n  }\n\n  closeDialog() {\n    this.dialogRef.close();\n  }\n\n  onClear(){\n    // tslint:disable-next-line: no-unused-expression\n    this.teamForm.reset;\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-2 close-div\" >\n      <button mat-icon-button (click)=\"closeDialog()\">\n        <mat-icon>close</mat-icon>\n      </button>\n    </div>\n</div>\n<div class=\"row\">\n    <form [formGroup]=\"teamForm\" class=\"normal-form\">\n        <mat-error *ngIf=\"teamInvalid\">\n            The team were not recognised\n          </mat-error>\n        <mat-form-field>\n            <input formControlName=\"name\" matInput placeholder=\"Team Name*\">\n            <mat-error>This field is mandatory.</mat-error>\n          </mat-form-field>\n          <div class=\"button-row\">\n            <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"teamForm.invalid\" (click)=\"onSubmit()\">Submit</button>\n            <button mat-raised-button color=\"warn\" (click)=\"onClear()\">Clear</button>\n          </div>\n    </form>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { TeamService } from '../services/team.service';\nimport { TeamDialogComponent } from '../team-dialog/team-dialog.component';\nimport { MatDialog } from '@angular/material';\nimport { Team } from '../models/team';\n\n@Component({\n  selector: 'app-team',\n  templateUrl: './team.component.html'\n})\nexport class TeamComponent implements OnInit {\n\n  constructor(private teamService: TeamService, public dialog: MatDialog) { }\n\n  displayedColumns: string[] = ['id', 'name'];\n  dataSource = [];\n\n  ngOnInit(): void {\n    this.teamService.getAll()\n    .subscribe(\n        data => {\n            this.dataSource = data;\n        },\n        error => {\n            console.error(error);\n        });\n  }\n\n  showNewTeamDialog(): void {\n    const dialogRef = this.dialog.open(TeamDialogComponent, {\n      width: '750px'\n    });\n  }\n\n  showUpdateTeamDialog(team: Team): void {\n    const dialogRef = this.dialog.open(TeamDialogComponent, {\n      width: '750px',\n      data: team\n    });\n  }\n\n}\n","<button mat-raised-button color=\"primary\" (click)=\"showNewTeamDialog()\">New Team</button>\n<mat-table *ngIf=\"dataSource\" [dataSource]=\"dataSource\">\n\n    <ng-container matColumnDef=\"id\">\n        <mat-header-cell *matHeaderCellDef> Id </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\">\n            <a class=\"laranja\" routerLink=\".\" (click)=\"showUpdateTeamDialog(element)\">{{element.id}}</a>\n        </mat-cell>\n    </ng-container>\n  \n    <ng-container matColumnDef=\"name\">\n        <mat-header-cell *matHeaderCellDef> Name </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\"> {{element.name}} </mat-cell>\n    </ng-container>\n  \n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n    <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\n  </mat-table>\n","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { Vacation } from '../models/vacation';\nimport { VacationService } from '../services/vacation.service';\nimport { FormControl } from '@angular/forms';\nimport { EmployeeService } from '../services/employee.service';\nimport { Observable } from 'rxjs';\nimport { NewVacationComponent } from '../new-vacation/new-vacation.component';\nimport { MatDialog } from '@angular/material';\n\n@Component({\n  selector: 'app-vacation',\n  templateUrl: './vacation.component.html'\n})\nexport class VacationComponent implements OnInit {\n\n  constructor(private vacationService: VacationService,\n              private employeeServie: EmployeeService,\n              public dialog: MatDialog,\n              private changeDetectorRefs: ChangeDetectorRef) { }\n\n  displayedColumns: string[] = ['id', 'startDate', 'finishDate'];\n  dataSource = [];\n  formControl = new FormControl();\n  filteredOptions: Observable<string[]>;\n\n  ngOnInit(): void {\n  }\n\n  searchVacationByRegistration(){\n    this.vacationService.getByRegistration(this.formControl.value)\n    .subscribe(\n      data => {\n          this.dataSource = data;\n          this.changeDetectorRefs.detectChanges();\n      },\n      error => {\n          console.error(error);\n          this.dataSource = [];\n          this.changeDetectorRefs.detectChanges();\n      });\n  }\n\n  getAll() {\n    this.vacationService.getAll()\n    .subscribe(\n        data => {\n            this.dataSource = data;\n            this.changeDetectorRefs.detectChanges();\n        },\n        error => {\n            console.error(error);\n            this.changeDetectorRefs.detectChanges();\n        });\n  }\n\n  searchEmployees(){\n    this.employeeServie.getByRegistration(this.formControl.value)\n    .subscribe(\n      data => {\n          this.dataSource = data;\n      },\n      error => {\n          console.error(error);\n      });\n  }\n\n  showNewVacationDialog(): void {\n    const dialogRef = this.dialog.open(NewVacationComponent, {\n      width: '750px'\n    });\n  }\n\n  showUpdateVacationDialog(vacation: Vacation): void {\n\n  }\n\n}\n","\n  <div class=\"input-row\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\n    <mat-form-field fxFlex style=\"width: 40%;\">\n      <input type=\"text\" placeholder=\"Enter a employee registration\" aria-label=\"Registration\" matInput\n        [formControl]=\"formControl\" [matAutocomplete]=\"auto\">\n      <mat-autocomplete autoActiveFirstOption #auto=\"matAutocomplete\">\n        <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option\">\n          {{option}}\n        </mat-option>\n      </mat-autocomplete>\n    </mat-form-field>\n\n  </div>\n  <div class=\"input-row\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\n    <button mat-raised-button (click)=\"searchVacationByRegistration()\">Search</button>\n    <button mat-raised-button (click)=\"showNewVacationDialog()\">New Vacation</button>\n  </div>\n\n<div class=\"example-container mat-elevation-z8\">\n  <mat-table *ngIf=\"dataSource.length > 0\" [dataSource]=\"dataSource\">\n\n    <ng-container matColumnDef=\"id\">\n      <mat-header-cell *matHeaderCellDef> Id </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\">\n        <a class=\"laranja\" routerLink=\".\" (click)=\"showUpdateVacationDialog(element)\">{{element.id}}</a>\n      </mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"startDate\">\n      <mat-header-cell *matHeaderCellDef> Start Date </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{element.startDate | date}} </mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"finishDate\">\n      <mat-header-cell *matHeaderCellDef> Finish Date </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{element.finishDate | date}} </mat-cell>\n    </ng-container>\n\n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n    <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\n  </mat-table>\n</div>\n<!-- </div>\n<div> -->","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:8080/api'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}